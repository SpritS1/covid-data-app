{"version":3,"sources":["components/BasicDataDisplay/BasicDataDisplay.jsx","components/CountriesTable/TableRow.jsx","scripts/sortData.js","components/CountriesTable/SortOption.jsx","components/CountriesTable/SortBy.jsx","components/CountriesTable/CountriesTable.jsx","components/Other/Modal.jsx","components/Header/HeaderOption.jsx","scripts/getDate.js","components/Header/DateChange.jsx","components/Other/SearchBox.jsx","components/Header/CountryChange.jsx","components/Header/Header.jsx","components/Map/Map.jsx","hooks/useFetch.js","components/Chart/ChartSelect.jsx","components/Chart/ChartButton.jsx","components/Chart/ChartOptions.jsx","hooks/useLocalStorage.js","components/Chart/Chart.jsx","hooks/useMousePosition.js","components/Other/Tooltip.jsx","components/Vaccination/ProgressBar.js","components/Vaccination/Progress.js","components/Vaccination/Vaccination.js","components/Footer/Footer.jsx","components/Other/LoadingScreen.jsx","components/Pages/Home.jsx","index.js"],"names":["BasicDataDisplay","countriesData","selectedCountry","isLoading","globalData","useMemo","confirmed","confirmed_daily","deaths","deaths_daily","data","selectedCountryData","country","countryName","getSelectedCountryFromCountriesData","className","toLocaleString","TableRow","countryData","iso","country_iso2s","src","toString","toLowerCase","alt","sortData","sortedElement","sortingDirection","newDataArray","concat","sortedData","sort","a","b","SortOption","optionName","columnName","sortedColumn","setSortedColumn","sortedCountriesData","setSortedCountriesData","useState","sortMode","setSortMode","useEffect","onClick","SortBy","CountriesTable","map","length","Modal","modalContent","setIsActive","createPortal","cloneElement","document","getElementById","HeaderOption","iconId","bodyContent","isActive","onMouseDown","getDate","daysToAdd","format","date","moment","add","DateChange","setDate","year","setYear","month","setMonth","day","setDay","yearRef","useRef","current","focus","handleDateSave","newDate","onKeyDown","e","key","preventDefault","handleEnterClick","handleEscapeClick","ref","type","placeholder","value","onChange","Number","handleYearInput","target","handleMonthInput","handleDayInput","latestDate","handleLatestDate","SearchBox","searchedValue","setSearchedValue","searchBoxRef","CountryChange","setSelectedCountry","countriesList","array","iso2","forEach","push","searchedCountriesList","setSearchedCountriesList","searchedList","filter","includes","searchCountry","activeElement","click","tabIndex","Header","href","Map","mapData","chartType","options","region","colorAxis","colors","legend","useFetch","url","response","setResponse","setIsLoading","error","setError","fetchData","fetch","res","json","ChartSelect","currentOption","setCurrentOption","isOptionActive","setIsOptionActive","dropdownRef","checkIfClickedOutside","contains","addEventListener","removeEventListener","name","handleOptionSelect","ChartButton","chartMode","setChartMode","ChartOptions","chartRange","setChartRange","useLocalStorage","item","window","localStorage","getItem","JSON","parse","console","log","storedValue","setStoredValue","setItem","stringify","Chart","chartData","setChartData","chartColor","setChartColor","dataName","setDataName","label","setLabel","chartMinDate","subtract","covidData","casesOptions","deathsOptions","convertedData","element","isDateInArray","convertedElement","convertToChartData","labels","datasets","borderColor","fill","tension","backgroundColor","responsive","maintainAspectRatio","elements","point","radius","hoverRadius","hitRadius","plugins","display","tooltips","mode","intersect","scales","y","beginAtZero","x","ticks","maxTicksLimit","useMousePosition","mousePosition","setMousePosition","updateMousePosition","clientX","clientY","Tooltip","props","style","top","left","content","ProgressBar","valueMain","maxValueMain","valueSecondary","maxValueSecondary","mainColor","secondaryColor","mainStyle","width","background","secondaryStyle","isMainTooltipVisible","setIsMainTooltipVisible","isSecondaryTooltipVisible","setIsSecondaryTooltipVisible","onMouseEnter","onMouseLeave","toFixed","Progress","title","fullyVac","partiallyVac","population","color","Vaccination","headers","vaccinationGlobalData","errorGlobal","vaccinationCountryData","errorCountry","All","people_vaccinated","people_partially_vaccinated","Footer","openNewPage","open","LoadingScreen","Home","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9c7a8448.chunk.js","sourcesContent":["import { useMemo } from 'react';\r\nimport './BasicDataDisplay.scss';\r\n\r\nconst BasicDataDisplay = ({ countriesData, selectedCountry, isLoading }) => {\r\n    const globalData = useMemo(() => {\r\n        const globalData = {\r\n            confirmed: 0,\r\n            confirmed_daily: 0,\r\n            deaths: 0,\r\n            deaths_daily: 0,\r\n        };\r\n\r\n        for (const data of countriesData) {\r\n            globalData.confirmed += data.confirmed;\r\n            globalData.confirmed_daily += data.confirmed_daily;\r\n            globalData.deaths += data.deaths;\r\n            globalData.deaths_daily += data.deaths_daily;\r\n        }\r\n\r\n        return globalData;\r\n    }, [countriesData]);\r\n\r\n    const getSelectedCountryFromCountriesData = () => {\r\n        for (const country of countriesData) {\r\n            if (country.country === selectedCountry.countryName) return country;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const selectedCountryData = getSelectedCountryFromCountriesData();\r\n\r\n    return (\r\n        <div className=\"basic-data-display\">\r\n            <h2\r\n                className={`basic-data-display__header ${\r\n                    isLoading ? 'isLoading' : ''\r\n                }`}\r\n            >\r\n                {selectedCountry.countryName} Statistics\r\n            </h2>\r\n\r\n            <div\r\n                className={`basic-data-display__data ${\r\n                    isLoading ? 'isLoading' : ''\r\n                }`}\r\n            >\r\n                <div className=\"basic-data-display__data-left\">\r\n                    <span className=\"basic-data-display__data-name\">\r\n                        New cases\r\n                    </span>\r\n                    <p className=\"basic-data-display__data-value\">\r\n                        {selectedCountryData &&\r\n                            selectedCountryData.confirmed_daily.toLocaleString()}\r\n                        {!selectedCountryData &&\r\n                            globalData &&\r\n                            globalData.confirmed_daily.toLocaleString()}\r\n                        {/* <span className=\"basic-data-display__data-new-value plus\">\r\n                            +2412\r\n                        </span> */}\r\n                    </p>\r\n                </div>\r\n                <div className=\"basic-data-display__data-icon-box\">\r\n                    <i className=\"basic-data-display__data-icon fas fa-virus\"></i>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className={`basic-data-display__data ${\r\n                    isLoading ? 'isLoading' : ''\r\n                }`}\r\n            >\r\n                <div className=\"basic-data-display__data-left\">\r\n                    <span className=\"basic-data-display__data-name\">\r\n                        New Deaths\r\n                    </span>\r\n                    <p className=\"basic-data-display__data-value\">\r\n                        {selectedCountryData &&\r\n                            selectedCountryData.deaths_daily.toLocaleString()}\r\n                        {!selectedCountryData &&\r\n                            globalData &&\r\n                            globalData.deaths_daily.toLocaleString()}\r\n                        {/* <span className=\"basic-data-display__data-new-value minus\">\r\n                            -10\r\n                        </span> */}\r\n                    </p>\r\n                </div>\r\n                <div className=\"basic-data-display__data-icon-box\">\r\n                    <i className=\"basic-data-display__data-icon fas fa-cross\"></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BasicDataDisplay;\r\n","import './TableRow.scss';\r\n\r\nconst TableRow = ({ countryData }) => {\r\n    const iso = countryData.country_iso2s[0];\r\n\r\n    return (\r\n        <tr className=\"table-row\">\r\n            <td className=\"table-row__td\">\r\n                <div className=\"table-row__td-wrapper\">\r\n                    {iso &&\r\n                        countryData.country !== 'United Kingdom' &&\r\n                        countryData.country !== 'France' &&\r\n                        countryData.country !== 'Netherlands' && (\r\n                            <img\r\n                                src={`https://flagcdn.com/24x18/${iso\r\n                                    .toString()\r\n                                    .toLowerCase()}.png`}\r\n                                alt={countryData.country + ' flag'}\r\n                            ></img>\r\n                        )}\r\n                    {/* Broken ISO2s exceptions*/}\r\n                    {countryData.country === 'United Kingdom' && (\r\n                        <img\r\n                            src={`https://flagcdn.com/24x18/gb.png`}\r\n                            alt={countryData.country + ' flag'}\r\n                        ></img>\r\n                    )}\r\n\r\n                    {countryData.country === 'France' && (\r\n                        <img\r\n                            src={`https://flagcdn.com/24x18/fr.png`}\r\n                            alt={countryData.country + ' flag'}\r\n                        ></img>\r\n                    )}\r\n\r\n                    {countryData.country === 'Netherlands' && (\r\n                        <img\r\n                            src={`https://flagcdn.com/24x18/nl.png`}\r\n                            alt={countryData.country + ' flag'}\r\n                        ></img>\r\n                    )}\r\n                </div>\r\n            </td>\r\n            <td className=\"table-row__td\">\r\n                <div className=\"table-row__td-wrapper--first\">\r\n                    <span className=\"table-row__td-name--first\">Country:</span>\r\n                    <span className=\"table-row__td-value--first\">\r\n                        {countryData.country}\r\n                    </span>\r\n                </div>\r\n            </td>\r\n            <td className=\"table-row__td\">\r\n                <div className=\"table-row__td-wrapper\">\r\n                    <span className=\"table-row__td-name\">New Cases:</span>\r\n                    <span className=\"table-row__td-value\">\r\n                        {countryData.confirmed_daily.toLocaleString()}\r\n                    </span>\r\n                </div>\r\n            </td>\r\n            <td className=\"table-row__td\">\r\n                <div className=\"table-row__td-wrapper\">\r\n                    <span className=\"table-row__td-name\">Total Cases:</span>\r\n                    <span className=\"table-row__td-value\">\r\n                        {countryData.confirmed.toLocaleString()}\r\n                    </span>\r\n                </div>\r\n            </td>\r\n            <td className=\"table-row__td\">\r\n                <div className=\"table-row__td-wrapper\">\r\n                    <span className=\"table-row__td-name\">New Deaths:</span>\r\n                    <span className=\"table-row__td-value\">\r\n                        {countryData.deaths_daily.toLocaleString()}\r\n                    </span>\r\n                </div>\r\n            </td>\r\n            <td className=\"table-row__td\">\r\n                <div className=\"table-row__td-wrapper\">\r\n                    <span className=\"table-row__td-name\">Total Deaths:</span>\r\n                    <span className=\"table-row__td-value\">\r\n                        {countryData.deaths.toLocaleString()}\r\n                    </span>\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default TableRow;\r\n","const sortData = (sortedElement, data, sortingDirection = 'desc') => {\r\n    const newDataArray = data.concat();\r\n\r\n    const sortedData = newDataArray.sort((a, b) => {\r\n        if (sortingDirection === 'desc') {\r\n            return b[sortedElement] - a[sortedElement];\r\n        } else if (sortingDirection === 'asc') {\r\n            return a[sortedElement] - b[sortedElement];\r\n        } else {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    return sortedData;\r\n};\r\n\r\nexport default sortData;\r\n","import { useEffect, useState } from 'react';\r\nimport './SortOption.scss';\r\nimport sortData from '../../scripts/sortData';\r\n\r\nconst SortOption = ({\r\n    optionName = 'New cases',\r\n    columnName,\r\n    sortedColumn,\r\n    setSortedColumn,\r\n    sortedCountriesData,\r\n    setSortedCountriesData,\r\n}) => {\r\n    const [sortMode, setSortMode] = useState('desc');\r\n\r\n    // If other column is sorted set sortMode to default desc value\r\n    useEffect(() => {\r\n        if (sortedColumn !== columnName) {\r\n            setSortMode('desc');\r\n        }\r\n    }, [sortedColumn, columnName]);\r\n\r\n    const handleClick = () => {\r\n        if (columnName === sortedColumn) {\r\n            sortMode === 'desc' ? setSortMode('asc') : setSortMode('desc');\r\n            setSortedCountriesData(\r\n                sortData(\r\n                    columnName,\r\n                    sortedCountriesData,\r\n                    sortMode === 'asc' ? 'desc' : 'asc',\r\n                ),\r\n            );\r\n        } else if (columnName !== sortedColumn) {\r\n            setSortedColumn(columnName);\r\n            setSortedCountriesData(\r\n                sortData(\r\n                    columnName,\r\n                    sortedCountriesData,\r\n                    sortMode === 'asc' ? 'asc' : 'desc',\r\n                ),\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <li\r\n            className={`sort-option ${\r\n                sortedColumn === columnName ? 'active' : ''\r\n            } ${sortMode === 'asc' ? 'asc' : 'desc'}`}\r\n            onClick={() => handleClick()}\r\n        >\r\n            {optionName}\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default SortOption;\r\n","import './SortBy.scss';\r\nimport SortOption from './SortOption';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst SortBy = ({\r\n    countriesData,\r\n    sortedCountriesData,\r\n    setSortedCountriesData,\r\n}) => {\r\n    const [sortedColumn, setSortedColumn] = useState('confirmed_daily');\r\n\r\n    useEffect(() => {\r\n        setSortedColumn('confirmed_daily');\r\n    }, [countriesData]);\r\n\r\n    return (\r\n        <th className=\"sort-by\">\r\n            <ul className=\"sort-by__list\">\r\n                <li className=\"sort-by__text\">Sort by:</li>\r\n                <SortOption\r\n                    optionName=\"New cases\"\r\n                    sortedColumn={sortedColumn}\r\n                    setSortedColumn={setSortedColumn}\r\n                    columnName=\"confirmed_daily\"\r\n                    sortedCountriesData={sortedCountriesData}\r\n                    setSortedCountriesData={setSortedCountriesData}\r\n                />\r\n                <SortOption\r\n                    optionName=\"Total Cases\"\r\n                    sortedColumn={sortedColumn}\r\n                    setSortedColumn={setSortedColumn}\r\n                    columnName=\"confirmed\"\r\n                    sortedCountriesData={sortedCountriesData}\r\n                    setSortedCountriesData={setSortedCountriesData}\r\n                />\r\n                <SortOption\r\n                    optionName=\"New deaths\"\r\n                    sortedColumn={sortedColumn}\r\n                    setSortedColumn={setSortedColumn}\r\n                    columnName=\"deaths_daily\"\r\n                    sortedCountriesData={sortedCountriesData}\r\n                    setSortedCountriesData={setSortedCountriesData}\r\n                />\r\n                <SortOption\r\n                    optionName=\"Total Deaths\"\r\n                    sortedColumn={sortedColumn}\r\n                    setSortedColumn={setSortedColumn}\r\n                    columnName=\"deaths\"\r\n                    sortedCountriesData={sortedCountriesData}\r\n                    setSortedCountriesData={setSortedCountriesData}\r\n                />\r\n            </ul>\r\n        </th>\r\n    );\r\n};\r\n\r\nexport default SortBy;\r\n","import TableRow from './TableRow';\r\nimport SortBy from './SortBy';\r\nimport './CountriesTable.scss';\r\nimport { useEffect, useState } from 'react';\r\nimport sortData from '../../scripts/sortData';\r\n\r\nconst CountriesTable = ({ countriesData, isLoading }) => {\r\n    const [sortedCountriesData, setSortedCountriesData] = useState(() =>\r\n        sortData('confirmed_daily', countriesData, 'desc'),\r\n    );\r\n\r\n    useEffect(() => {\r\n        setSortedCountriesData(\r\n            sortData('confirmed_daily', countriesData, 'desc'),\r\n        );\r\n    }, [countriesData]);\r\n\r\n    return (\r\n        <table className={`countries-table ${isLoading ? 'isLoading' : ''}`}>\r\n            <thead className=\"countries-table__thead\">\r\n                <tr className=\"countries-table__tr\">\r\n                    <th className=\"countries-table__title\">\r\n                        Cases and deaths by country\r\n                    </th>\r\n                    <SortBy\r\n                        countriesData={countriesData}\r\n                        sortedCountriesData={sortedCountriesData}\r\n                        setSortedCountriesData={setSortedCountriesData}\r\n                    />\r\n                </tr>\r\n            </thead>\r\n            <tbody className=\"countries-table__tbody\">\r\n                {sortedCountriesData &&\r\n                    sortedCountriesData.map((countryData) => {\r\n                        if (\r\n                            countryData.confirmed &&\r\n                            countryData.deaths &&\r\n                            countryData.country_iso2s.length\r\n                        ) {\r\n                            return (\r\n                                <TableRow\r\n                                    countryData={countryData}\r\n                                    key={countryData.country}\r\n                                />\r\n                            );\r\n                        } else return null;\r\n                    })}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default CountriesTable;\r\n","import './Modal.scss';\r\nimport { createPortal } from 'react-dom';\r\nimport { cloneElement } from 'react';\r\n\r\nconst Modal = ({ modalContent, setIsActive }) => {\r\n    return createPortal(\r\n        <div className=\"modal\">\r\n            {modalContent && cloneElement(modalContent, { setIsActive })}\r\n        </div>,\r\n        document.getElementById('modal-root'),\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState } from 'react';\r\nimport Modal from 'components/Other/Modal';\r\nimport './HeaderOption.scss';\r\n\r\nconst HeaderOption = ({ iconId, bodyContent, modalContent }) => {\r\n    const [isActive, setIsActive] = useState(false);\r\n\r\n    return (\r\n        <div className=\"header-option\" onMouseDown={() => setIsActive(true)}>\r\n            <i className={`header-option__icon ${iconId}`} />\r\n            <div className=\"header-option__body\">{bodyContent}</div>\r\n            {isActive && modalContent && (\r\n                <Modal setIsActive={setIsActive} modalContent={modalContent} />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeaderOption;\r\n","import moment from 'moment';\r\n\r\nconst getDate = (daysToAdd = 0, format = 'YYYY-MM-DD') => {\r\n    const date = moment().add(daysToAdd, 'days').format(format);\r\n\r\n    return date;\r\n};\r\n\r\nexport default getDate;\r\n","import './DateChange.scss';\r\nimport moment from 'moment';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport getDate from 'scripts/getDate';\r\n\r\nconst DateChange = ({ date, setDate, setIsActive }) => {\r\n    const [year, setYear] = useState(moment(date).format('YYYY'));\r\n    const [month, setMonth] = useState(moment(date).format('MM'));\r\n    const [day, setDay] = useState(moment(date).format('DD'));\r\n\r\n    const yearRef = useRef();\r\n\r\n    useEffect(() => {\r\n        yearRef.current.focus();\r\n    }, []);\r\n\r\n    // Handlers\r\n\r\n    const handleEnterClick = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            handleDateSave();\r\n        }\r\n    };\r\n\r\n    const handleEscapeClick = (e) => {\r\n        if (e.key === 'Escape') {\r\n            e.preventDefault();\r\n            setIsActive(false);\r\n        }\r\n    };\r\n\r\n    const handleYearInput = (year) => {\r\n        if (Number(year) <= Number(moment().format('YYYY')) || year === '') {\r\n            setYear(year);\r\n        }\r\n    };\r\n\r\n    const handleMonthInput = (month) => {\r\n        if ((month >= 1 && month <= 12) || month === '') {\r\n            setMonth(month);\r\n        }\r\n    };\r\n\r\n    const handleDayInput = (day) => {\r\n        if ((day >= 1 && day <= 31) || day === '') {\r\n            setDay(day);\r\n        }\r\n    };\r\n\r\n    const handleDateSave = () => {\r\n        if (year && month && day) {\r\n            const newDate = moment(`${year}-${month}-${day}`, 'YYYY-MM-DD');\r\n\r\n            setDate(newDate.format('YYYY-MM-DD'));\r\n            setIsActive(false);\r\n        }\r\n    };\r\n\r\n    const handleLatestDate = () => {\r\n        const latestDate = getDate(-1);\r\n\r\n        setYear(moment(latestDate).format('YYYY'));\r\n        setMonth(moment(latestDate).format('MM'));\r\n        setDay(moment(latestDate).format('DD'));\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"date-change\"\r\n            onKeyDown={(e) => {\r\n                handleEnterClick(e);\r\n                handleEscapeClick(e);\r\n            }}\r\n        >\r\n            <div className=\"date-change__header\">\r\n                <h3 className=\"date-change__title\">Insert date</h3>\r\n                <i\r\n                    className=\"fas fa-times date-change__close\"\r\n                    onClick={() => setIsActive(false)}\r\n                />\r\n            </div>\r\n            <div className=\"date-change__inputs-group\">\r\n                <input\r\n                    ref={yearRef}\r\n                    type=\"number\"\r\n                    placeholder=\"YYYY\"\r\n                    className=\"date-change__input\"\r\n                    value={year}\r\n                    onChange={(e) => handleYearInput(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"MM\"\r\n                    className=\"date-change__input\"\r\n                    value={month}\r\n                    onChange={(e) => handleMonthInput(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"number\"\r\n                    placeholder=\"DD\"\r\n                    className=\"date-change__input\"\r\n                    value={day}\r\n                    onChange={(e) => handleDayInput(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"date-change__buttons-group\">\r\n                <button\r\n                    className=\"date-change__button\"\r\n                    onClick={() => handleDateSave()}\r\n                >\r\n                    Save\r\n                </button>\r\n                <button\r\n                    className=\"date-change__button\"\r\n                    onClick={() => handleLatestDate()}\r\n                >\r\n                    Latest date\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DateChange;\r\n","import { useEffect, useRef } from 'react';\r\nimport './SearchBox.scss';\r\n\r\nconst SearchBox = ({ searchedValue, setSearchedValue }) => {\r\n    const searchBoxRef = useRef();\r\n\r\n    useEffect(() => {\r\n        searchBoxRef.current.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"search-box\">\r\n            <input\r\n                ref={searchBoxRef}\r\n                type=\"text\"\r\n                value={searchedValue}\r\n                onChange={(e) => setSearchedValue(e.target.value)}\r\n                placeholder=\"Search\"\r\n                className=\"search-box__input\"\r\n            />\r\n            <i className=\"fas fa-search search-box__icon \"></i>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBox;\r\n","import './CountryChange.scss';\r\nimport SearchBox from 'components/Other/SearchBox';\r\nimport { useEffect, useMemo, useState } from 'react';\r\n\r\nconst CountryChange = ({ setIsActive, countriesData, setSelectedCountry }) => {\r\n    // Converts countriesData to array of objects with countryName and iso2\r\n    const countriesList = useMemo(() => {\r\n        const array = [\r\n            {\r\n                countryName: 'Global',\r\n                iso2: null,\r\n            },\r\n        ];\r\n\r\n        countriesData.forEach((country) => {\r\n            if (country.country && country.country_iso2s) {\r\n                array.push({\r\n                    countryName: country.country,\r\n                    iso2: country.country_iso2s[0],\r\n                });\r\n            }\r\n        });\r\n\r\n        return array;\r\n    }, [countriesData]);\r\n\r\n    const [searchedCountriesList, setSearchedCountriesList] =\r\n        useState(countriesList);\r\n    const [searchedValue, setSearchedValue] = useState('');\r\n\r\n    const searchCountry = (searchedValue, countriesList) => {\r\n        const searchedList = countriesList.filter((country) => {\r\n            if (\r\n                country.countryName\r\n                    .toLowerCase()\r\n                    .includes(searchedValue.toLowerCase())\r\n            ) {\r\n                return country;\r\n            }\r\n            return null;\r\n        });\r\n\r\n        setSearchedCountriesList(searchedList);\r\n    };\r\n\r\n    useEffect(() => {\r\n        searchCountry(searchedValue, countriesList);\r\n    }, [searchedValue, countriesList]);\r\n\r\n    const handleEnterClick = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            document.activeElement.click();\r\n        }\r\n    };\r\n\r\n    const handleEscapeClick = (e) => {\r\n        if (e.key === 'Escape') {\r\n            e.preventDefault();\r\n            setIsActive(false);\r\n        }\r\n    };\r\n\r\n    const handleCountryClick = (country) => {\r\n        setSelectedCountry(country);\r\n        setIsActive(false);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"country-change\"\r\n            onKeyDown={(e) => {\r\n                handleEnterClick(e);\r\n                handleEscapeClick(e);\r\n            }}\r\n        >\r\n            <div className=\"country-change__header\">\r\n                <h3 className=\"country-change__title\">Select country</h3>\r\n                <i\r\n                    className=\"fas fa-times country-change__close\"\r\n                    onClick={() => setIsActive(false)}\r\n                />\r\n            </div>\r\n            <SearchBox\r\n                searchedValue={searchedValue}\r\n                setSearchedValue={setSearchedValue}\r\n            />\r\n            <ul className=\"country-change__countries-list\">\r\n                {searchedCountriesList.map(({ countryName, iso2 }) => {\r\n                    if (iso2 || countryName === 'Global') {\r\n                        return (\r\n                            <li\r\n                                className=\"country-change__countries-list-item\"\r\n                                onClick={() =>\r\n                                    handleCountryClick({ countryName, iso2 })\r\n                                }\r\n                                tabIndex={0}\r\n                                key={countryName}\r\n                            >\r\n                                {iso2 && (\r\n                                    <img\r\n                                        className=\"country-change__country-flag\"\r\n                                        src={`https://flagcdn.com/24x18/${iso2.toLowerCase()}.png`}\r\n                                        alt={countryName + ' flag'}\r\n                                    ></img>\r\n                                )}\r\n                                {countryName === 'Global' && (\r\n                                    <i className=\"fas fa-globe country-change__country-flag\"></i>\r\n                                )}\r\n                                <span className=\"country-name\">\r\n                                    {countryName}\r\n                                </span>\r\n                            </li>\r\n                        );\r\n                    }\r\n                    return null;\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryChange;\r\n","import './Header.scss';\r\nimport HeaderOption from './HeaderOption';\r\nimport DateChange from './DateChange';\r\nimport CountryChange from './CountryChange';\r\n\r\nconst Header = ({\r\n    date,\r\n    setDate,\r\n    selectedCountry,\r\n    setSelectedCountry,\r\n    countriesData,\r\n}) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <a className=\"header__logo\" href=\"/\">\r\n                <h1 className=\"header__text\">COVID-19 Data</h1>\r\n                <i className=\"header__icon fas fa-viruses\"></i>\r\n            </a>\r\n            <div className=\"header__options\">\r\n                <HeaderOption\r\n                    iconId=\"far fa-flag\"\r\n                    bodyContent={selectedCountry.countryName}\r\n                    modalContent={\r\n                        <CountryChange\r\n                            countriesData={countriesData}\r\n                            country={selectedCountry}\r\n                            setSelectedCountry={setSelectedCountry}\r\n                        />\r\n                    }\r\n                />\r\n                <HeaderOption\r\n                    iconId=\"far fa-calendar-alt\"\r\n                    bodyContent={date}\r\n                    modalContent={<DateChange date={date} setDate={setDate} />}\r\n                />\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import Chart from 'react-google-charts';\r\nimport './Map.scss';\r\n\r\nconst Map = ({ countriesData, selectedCountry, isLoading }) => {\r\n    const mapData = [['Country', 'Cases']];\r\n\r\n    countriesData.forEach(({ country_iso2s, confirmed_daily }) => {\r\n        if (confirmed_daily) {\r\n            if (country_iso2s.length > 0) {\r\n                country_iso2s.forEach((iso) => {\r\n                    const data = [iso, confirmed_daily];\r\n                    if (confirmed_daily < 0) data[1] = 0;\r\n                    mapData.push(data);\r\n                });\r\n            } else {\r\n                const data = [country_iso2s[0], confirmed_daily];\r\n                mapData.push(data);\r\n            }\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={`map ${isLoading ? 'isLoading' : ''}`}>\r\n            <Chart\r\n                className={`map__geochart`}\r\n                chartType=\"GeoChart\"\r\n                data={mapData}\r\n                options={{\r\n                    region: selectedCountry.iso2,\r\n                    colorAxis: { colors: ['#ECFCFF', '#1EBFE3', '#00A6DE'] },\r\n                    legend: 'none',\r\n                }}\r\n            ></Chart>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Map;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useFetch = (url, options) => {\r\n    const [response, setResponse] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await fetch(url, options);\r\n                const data = await res.json();\r\n\r\n                setResponse(data);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                setError(error);\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        fetchData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [url]);\r\n\r\n    return { response, isLoading, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport './ChartSelect.scss';\r\n\r\nconst ChartSelect = ({ options, currentOption, setCurrentOption }) => {\r\n    const [isOptionActive, setIsOptionActive] = useState(false);\r\n    const dropdownRef = useRef();\r\n\r\n    // close dropdown when clicked outside\r\n    useEffect(() => {\r\n        const checkIfClickedOutside = (e) => {\r\n            if (\r\n                isOptionActive &&\r\n                dropdownRef.current &&\r\n                !dropdownRef.current.contains(e.target)\r\n            ) {\r\n                setIsOptionActive(false);\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousedown', checkIfClickedOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('mousedown', checkIfClickedOutside);\r\n        };\r\n    }, [isOptionActive]);\r\n\r\n    const handleOptionSelect = (value) => {\r\n        setCurrentOption(value);\r\n        setIsOptionActive(false);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"chart-select\"\r\n            onClick={(e) => !isOptionActive && setIsOptionActive(true)}\r\n        >\r\n            {currentOption}\r\n            {isOptionActive && (\r\n                <ul className=\"chart-select__dropdown\" ref={dropdownRef}>\r\n                    {options &&\r\n                        options.map(({ value, name }) => {\r\n                            return (\r\n                                <li\r\n                                    className=\"chart-select__option\"\r\n                                    onClick={() => handleOptionSelect(value)}\r\n                                    key={value}\r\n                                >\r\n                                    {name}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                </ul>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartSelect;\r\n","import './ChartButton.scss';\r\n\r\nconst ChartButton = ({ type, optionName, chartMode, setChartMode }) => {\r\n    return (\r\n        <button\r\n            className={`chart-button chart-button${type ? '--' + type : ''} ${\r\n                chartMode === type ? 'active' : ''\r\n            }`}\r\n            onClick={() => setChartMode(type)}\r\n        >\r\n            {optionName}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default ChartButton;\r\n","import './ChartOptions.scss';\r\nimport ChartSelect from './ChartSelect';\r\nimport ChartButton from './ChartButton';\r\n\r\nconst ChartOptions = ({\r\n    chartRange,\r\n    setChartRange,\r\n    chartMode,\r\n    setChartMode,\r\n}) => {\r\n    const chartRangeOptions = [\r\n        { value: 7, name: '7 days' },\r\n        { value: 14, name: '14 days' },\r\n        { value: 30, name: '30 days' },\r\n    ];\r\n\r\n    return (\r\n        <div className=\"chart-options\">\r\n            <ChartSelect\r\n                options={chartRangeOptions}\r\n                currentOption={`${chartRange} days`}\r\n                setCurrentOption={setChartRange}\r\n            />\r\n            <ChartButton\r\n                type=\"cases\"\r\n                optionName=\"New Cases\"\r\n                chartMode={chartMode}\r\n                setChartMode={setChartMode}\r\n            />\r\n            <ChartButton\r\n                type=\"deaths\"\r\n                optionName=\"New Deaths\"\r\n                chartMode={chartMode}\r\n                setChartMode={setChartMode}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChartOptions;\r\n","import { useState } from 'react';\r\n\r\nconst useLocalStorage = (key, value) => {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n\r\n            if (item) return JSON.parse(item);\r\n            return value;\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    });\r\n\r\n    const setValue = (value) => {\r\n        try {\r\n            setStoredValue(value);\r\n            window.localStorage.setItem(key, JSON.stringify(value));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return [storedValue, setValue];\r\n};\r\n\r\nexport default useLocalStorage;\r\n","import './Chart.scss';\r\nimport { Line } from 'react-chartjs-2';\r\nimport useFetch from 'hooks/useFetch';\r\nimport { useEffect, useState } from 'react';\r\nimport ChartOptions from './ChartOptions';\r\nimport moment from 'moment';\r\nimport useLocalStorage from 'hooks/useLocalStorage';\r\n\r\nconst Chart = ({ date, selectedCountry, isLoading }) => {\r\n    const [chartData, setChartData] = useState(null);\r\n    const [chartRange, setChartRange] = useLocalStorage('chartRange', 30);\r\n    const [chartMode, setChartMode] = useState('cases');\r\n\r\n    const [chartColor, setChartColor] = useState('33, 212, 253');\r\n    const [dataName, setDataName] = useState('confirmed_daily');\r\n    const [label, setLabel] = useState('New Cases');\r\n\r\n    const chartMinDate = moment(date)\r\n        .subtract(chartRange, 'days')\r\n        .format('YYYY-MM-DD');\r\n    const url = `https://webhooks.mongodb-stitch.com/api/client/v2.0/app/covid-19-qppza/service/REST-API/incoming_webhook/countries_summary?${\r\n        selectedCountry && selectedCountry.countryName !== 'Global'\r\n            ? `country=${selectedCountry.countryName}&`\r\n            : ''\r\n    }min_date=${chartMinDate}&max_date=${date}&hide_fields=_id,uids,country,states,country_iso2s,population,recovered,confirmed,deaths,country_iso3s,country_codes,combined_names,recovered_daily`;\r\n    const { response: covidData, error } = useFetch(url, {});\r\n\r\n    useEffect(() => {\r\n        const casesOptions = {\r\n            chartColor: '30, 191, 227',\r\n            dataName: 'confirmed_daily',\r\n            label: 'New Cases',\r\n        };\r\n\r\n        const deathsOptions = {\r\n            chartColor: '51, 51, 51',\r\n            dataName: 'deaths_daily',\r\n            label: 'New Deaths',\r\n        };\r\n\r\n        if (chartMode === 'cases') {\r\n            setChartColor(casesOptions.chartColor);\r\n            setDataName(casesOptions.dataName);\r\n            setLabel(casesOptions.label);\r\n        } else if (chartMode === 'deaths') {\r\n            setChartColor(deathsOptions.chartColor);\r\n            setDataName(deathsOptions.dataName);\r\n            setLabel(deathsOptions.label);\r\n        }\r\n    }, [chartMode]);\r\n\r\n    useEffect(() => {\r\n        // Converts data from API to display it in the chart\r\n        const convertToChartData = (data) => {\r\n            const convertedData = [];\r\n\r\n            data.forEach((element) => {\r\n                let isDateInArray = false;\r\n\r\n                convertedData.forEach((convertedElement) => {\r\n                    if (\r\n                        convertedElement &&\r\n                        convertedElement.date === element.date\r\n                    ) {\r\n                        convertedElement.confirmed_daily +=\r\n                            element.confirmed_daily;\r\n                        convertedElement.deaths_daily += element.deaths_daily;\r\n\r\n                        isDateInArray = true;\r\n                    }\r\n                });\r\n                if (!isDateInArray) {\r\n                    convertedData.push(element);\r\n                }\r\n            });\r\n\r\n            return convertedData;\r\n        };\r\n\r\n        if (covidData) {\r\n            setChartData(convertToChartData(covidData));\r\n        }\r\n    }, [covidData]);\r\n\r\n    const data = {\r\n        labels:\r\n            chartData &&\r\n            chartData.map(({ date }) => moment(date).format('MMM DD')),\r\n        datasets: [\r\n            {\r\n                label: label,\r\n                data:\r\n                    chartData && chartData.map((element) => element[dataName]),\r\n                borderColor: `rgba(${chartColor}, 1)`,\r\n                fill: true,\r\n                tension: 0.2,\r\n                backgroundColor: `rgba(${chartColor}, 0.2)`,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        elements: {\r\n            point: {\r\n                radius: 0,\r\n                hoverRadius: 5,\r\n                hitRadius: 200,\r\n            },\r\n        },\r\n        plugins: {\r\n            legend: {\r\n                display: false,\r\n            },\r\n            tooltips: {\r\n                mode: 'index',\r\n                intersect: false,\r\n            },\r\n        },\r\n        scales: {\r\n            y: {\r\n                beginAtZero: true,\r\n            },\r\n            x: {\r\n                ticks: {\r\n                    maxTicksLimit:\r\n                        chartData && chartData.length / (chartData.length / 8),\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div className={`chart`}>\r\n            <h2 className=\"chart__title\">\r\n                {selectedCountry.countryName} Trend\r\n            </h2>\r\n            <ChartOptions\r\n                chartRange={chartRange}\r\n                setChartRange={setChartRange}\r\n                chartMode={chartMode}\r\n                setChartMode={setChartMode}\r\n            />\r\n            <div className={`chart__body ${isLoading ? 'isLoading' : ''}`}>\r\n                <Line data={data} options={options} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chart;\r\n","import { useState, useEffect } from 'react';\r\n\r\nconst useMousePosition = () => {\r\n    const [mousePosition, setMousePosition] = useState({ x: null, y: null });\r\n\r\n    useEffect(() => {\r\n        const updateMousePosition = (e) =>\r\n            setMousePosition({ x: e.clientX, y: e.clientY });\r\n\r\n        window.addEventListener('mousemove', updateMousePosition);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousemove', updateMousePosition);\r\n        };\r\n    }, []);\r\n    return mousePosition;\r\n};\r\n\r\nexport default useMousePosition;\r\n","import { useEffect } from 'react';\r\nimport './Tooltip.scss';\r\nimport useMousePosition from 'hooks/useMousePosition';\r\n\r\nconst Tooltip = (props) => {\r\n    const mousePosition = useMousePosition();\r\n\r\n    const style = {\r\n        top: mousePosition.y - 35,\r\n        left: mousePosition.x - 20,\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     console.log(mousePosition);\r\n    // }, [mousePosition]);\r\n\r\n    return (\r\n        <div className=\"tooltip\" style={style}>\r\n            {props.content}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Tooltip;\r\n","import './ProgressBar.scss';\r\nimport Tooltip from 'components/Other/Tooltip';\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ProgressBar = ({\r\n    valueMain,\r\n    maxValueMain,\r\n    valueSecondary,\r\n    maxValueSecondary,\r\n    mainColor,\r\n    secondaryColor,\r\n    isLoading,\r\n}) => {\r\n    const mainStyle = {\r\n        width: `${(valueMain / maxValueMain) * 100}%`,\r\n        background: mainColor,\r\n    };\r\n\r\n    const secondaryStyle = {\r\n        width: `${(valueSecondary / maxValueSecondary) * 100}%`,\r\n        background: secondaryColor,\r\n    };\r\n\r\n    const [isMainTooltipVisible, setIsMainTooltipVisible] = useState(false);\r\n    const [isSecondaryTooltipVisible, setIsSecondaryTooltipVisible] =\r\n        useState(false);\r\n\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <div\r\n                className=\"progress-bar__main\"\r\n                style={mainStyle}\r\n                onMouseEnter={() => isLoading || setIsMainTooltipVisible(true)}\r\n                onMouseLeave={() => isLoading || setIsMainTooltipVisible(false)}\r\n            ></div>\r\n            {isMainTooltipVisible && (\r\n                <Tooltip\r\n                    content={`${((valueMain / maxValueMain) * 100).toFixed(\r\n                        2,\r\n                    )} %`}\r\n                />\r\n            )}\r\n            <div\r\n                className=\"progress-bar__secondary\"\r\n                style={secondaryStyle}\r\n                onMouseEnter={() =>\r\n                    isLoading || setIsSecondaryTooltipVisible(true)\r\n                }\r\n                onMouseLeave={() =>\r\n                    isLoading || setIsSecondaryTooltipVisible(false)\r\n                }\r\n            ></div>\r\n            {isSecondaryTooltipVisible && (\r\n                <Tooltip\r\n                    content={`${(\r\n                        (valueSecondary / maxValueSecondary) *\r\n                        100\r\n                    ).toFixed(2)} %`}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import './Progress.scss';\r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst Progress = ({\r\n    title,\r\n    fullyVac,\r\n    partiallyVac,\r\n    population,\r\n    isActive = false,\r\n    isLoading,\r\n}) => {\r\n    return (\r\n        <div className={`progress ${isLoading ? 'isLoading' : ''}`}>\r\n            <div className=\"progress__header\">\r\n                <h3 className=\"progress__text\">{title}</h3>\r\n            </div>\r\n\r\n            {isActive && (\r\n                <ProgressBar\r\n                    valueMain={fullyVac}\r\n                    maxValueMain={population}\r\n                    valueSecondary={partiallyVac}\r\n                    maxValueSecondary={population}\r\n                    mainColor=\"#1ebfe3\"\r\n                    secondaryColor=\"#A5D7E2\"\r\n                    isLoading={isLoading}\r\n                />\r\n            )}\r\n\r\n            {!isActive && <ProgressBar />}\r\n\r\n            <ul className=\"progress__info-list\">\r\n                <li className=\"progress__info-item\">\r\n                    <div className=\"progress__info-item-left\">\r\n                        <i\r\n                            className=\"progress__info-color fas fa-circle\"\r\n                            style={{ color: '#1ebfe3' }}\r\n                        ></i>\r\n                    </div>\r\n                    <div className=\"progress__info-item-right\">\r\n                        <span className=\"progress__info-text\">\r\n                            Fully vaccinated\r\n                        </span>\r\n                        <span className=\"progress__info-value\">\r\n                            {fullyVac.toLocaleString()}\r\n                        </span>\r\n                    </div>\r\n                </li>\r\n                <li className=\"progress__info-item\">\r\n                    <div className=\"progress__info-item-left\">\r\n                        <i\r\n                            className=\"progress__info-color fas fa-circle\"\r\n                            style={{ color: '#A5D7E2' }}\r\n                        ></i>\r\n                    </div>\r\n                    <div className=\"progress__info-item-right\">\r\n                        <span className=\"progress__info-text\">\r\n                            Partially vaccinated\r\n                        </span>\r\n                        <span className=\"progress__info-value\">\r\n                            {partiallyVac.toLocaleString()}\r\n                        </span>\r\n                    </div>\r\n                </li>\r\n                <li className=\"progress__info-item\">\r\n                    <div className=\"progress__info-item-left\">\r\n                        <i\r\n                            className=\"progress__info-color fas fa-circle\"\r\n                            style={{ color: '#ededed' }}\r\n                        ></i>\r\n                    </div>\r\n                    <div className=\"progress__info-item-right\">\r\n                        <span className=\"progress__info-text\">Population</span>\r\n                        <span className=\"progress__info-value\">\r\n                            {population && population.toLocaleString()}\r\n                            {!population && 'Not available'}\r\n                        </span>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Progress;\r\n","import './Vaccination.scss';\r\nimport Progress from './Progress';\r\nimport useFetch from 'hooks/useFetch';\r\nimport getDate from 'scripts/getDate';\r\n\r\nconst Vaccination = ({ selectedCountry }) => {\r\n    const { response: vaccinationGlobalData, errorGlobal } = useFetch(\r\n        'https://covid-api.mmediagroup.fr/v1/vaccines?country=Global',\r\n        {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        },\r\n    );\r\n\r\n    const {\r\n        response: vaccinationCountryData,\r\n        isLoading,\r\n        errorCountry,\r\n    } = useFetch(\r\n        `https://covid-api.mmediagroup.fr/v1/vaccines?country=${selectedCountry.countryName}`,\r\n        {\r\n            headers: { 'Content-Type': 'application/json' },\r\n        },\r\n    );\r\n\r\n    return (\r\n        <div className=\"vaccination\">\r\n            <h2 className=\"vaccination__title\">COVID-19 Vaccines</h2>\r\n            <div className=\"vaccination__date\">Last updated: {getDate()}</div>\r\n            {vaccinationCountryData &&\r\n                selectedCountry.countryName !== 'Global' && (\r\n                    <Progress\r\n                        title={`${selectedCountry.countryName} progress`}\r\n                        fullyVac={vaccinationCountryData.All.people_vaccinated}\r\n                        partiallyVac={\r\n                            vaccinationCountryData.All\r\n                                .people_partially_vaccinated\r\n                        }\r\n                        population={vaccinationCountryData.All.population}\r\n                        isActive={true}\r\n                        isLoading={isLoading}\r\n                    />\r\n                )}\r\n\r\n            {vaccinationCountryData &&\r\n                selectedCountry.countryName === 'Global' && (\r\n                    <Progress\r\n                        title={'No country selected'}\r\n                        fullyVac=\"-\"\r\n                        partiallyVac=\"-\"\r\n                        population=\"-\"\r\n                    />\r\n                )}\r\n\r\n            {vaccinationGlobalData && (\r\n                <Progress\r\n                    title=\"Global progress\"\r\n                    fullyVac={vaccinationGlobalData.All.people_vaccinated}\r\n                    partiallyVac={\r\n                        vaccinationGlobalData.All.people_partially_vaccinated\r\n                    }\r\n                    population={vaccinationGlobalData.All.population}\r\n                    isActive={true}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Vaccination;\r\n","import './Footer.scss';\r\n\r\nconst Footer = () => {\r\n    const openNewPage = (url) => {\r\n        window.open(url, '_blank');\r\n    };\r\n\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">\r\n                {' '}\r\n                &copy; 2021 &middot; Made by <b>Mateusz Penkala</b> &middot;\r\n            </p>\r\n            <ul className=\"footer__socials-list\">\r\n                <li\r\n                    className=\"footer__socials-item\"\r\n                    onClick={() => openNewPage('https://github.com/SpritS1')}\r\n                >\r\n                    <i className=\"footer__social-icon fab fa-github-square\"></i>\r\n                </li>\r\n                <li\r\n                    className=\"footer__socials-item\"\r\n                    onClick={() =>\r\n                        openNewPage(\r\n                            'https://www.linkedin.com/in/mateusz-penkala-060540209/',\r\n                        )\r\n                    }\r\n                >\r\n                    <i className=\"footer__social-icon fab fa-linkedin\"></i>\r\n                </li>\r\n            </ul>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import './LoadingScreen.scss';\r\n\r\nconst LoadingScreen = () => {\r\n    return (\r\n        <div className=\"loading-screen\">\r\n            <div className=\"loading-screen__spin\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import './Home.scss';\r\nimport BasicDataDisplay from 'components/BasicDataDisplay/BasicDataDisplay';\r\nimport CountriesTable from 'components/CountriesTable/CountriesTable';\r\nimport Header from 'components/Header/Header';\r\nimport Map from 'components/Map/Map';\r\nimport Chart from 'components/Chart/Chart';\r\nimport Vaccination from 'components/Vaccination/Vaccination';\r\nimport Footer from 'components/Footer/Footer';\r\nimport LoadingScreen from 'components/Other/LoadingScreen';\r\n\r\nimport useFetch from 'hooks/useFetch';\r\nimport getDate from 'scripts/getDate';\r\n\r\nimport { useState } from 'react';\r\nimport useLocalStorage from 'hooks/useLocalStorage';\r\n\r\nconst Home = () => {\r\n    // States\r\n    const [date, setDate] = useState(getDate(-1));\r\n    const [selectedCountry, setSelectedCountry] = useLocalStorage(\r\n        'selectedCountry',\r\n        {\r\n            countryName: 'Global',\r\n            iso2: null,\r\n        },\r\n    );\r\n\r\n    // Fetch\r\n    const url = `https://webhooks.mongodb-stitch.com/api/client/v2.0/app/covid-19-qppza/service/REST-API/incoming_webhook/countries_summary?&min_date=${date}&max_date=${date}`;\r\n    const fetchOptions = {\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n    const {\r\n        response: countriesData,\r\n        isLoading,\r\n        error,\r\n    } = useFetch(url, fetchOptions);\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {!countriesData && <LoadingScreen />}\r\n\r\n            {countriesData && (\r\n                <>\r\n                    <Header\r\n                        date={date}\r\n                        setDate={setDate}\r\n                        selectedCountry={selectedCountry}\r\n                        setSelectedCountry={setSelectedCountry}\r\n                        countriesData={countriesData}\r\n                    />\r\n                    <BasicDataDisplay\r\n                        countriesData={countriesData}\r\n                        selectedCountry={selectedCountry}\r\n                        isLoading={isLoading}\r\n                    />\r\n                    <CountriesTable\r\n                        countriesData={countriesData}\r\n                        isLoading={isLoading}\r\n                    />\r\n                    <Map\r\n                        countriesData={countriesData}\r\n                        selectedCountry={selectedCountry}\r\n                        isLoading={isLoading}\r\n                    />\r\n                    <Chart\r\n                        date={date}\r\n                        selectedCountry={selectedCountry}\r\n                        isLoading={isLoading}\r\n                    />\r\n                    <Vaccination\r\n                        selectedCountry={selectedCountry}\r\n                        isLoading={isLoading}\r\n                    />\r\n                    <Footer />\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Home from 'components/Pages/Home.jsx';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Home />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}