{"version":3,"sources":["components/BasicDataDisplay/BasicDataDisplay.jsx","components/CountriesTable/TableRow.jsx","scripts/sortData.js","components/CountriesTable/SortOption.jsx","components/CountriesTable/SortBy.jsx","components/CountriesTable/CountriesTable.jsx","components/Other/Modal.jsx","components/Header/HeaderOption.jsx","scripts/getDate.js","redux/dateSlice.js","components/Header/DateChange.jsx","components/Other/SearchBox.jsx","components/Header/CountryChange.jsx","components/Header/Header.jsx","components/Map/Map.jsx","hooks/useFetch.js","components/Chart/ChartSelect.jsx","components/Chart/ChartButton.jsx","components/Chart/ChartOptions.jsx","hooks/useLocalStorage.js","components/Chart/Chart.jsx","hooks/useMousePosition.js","components/Other/Tooltip.jsx","components/Vaccination/ProgressBar.jsx","components/Vaccination/ProgressInfoItem.jsx","components/Vaccination/Progress.jsx","components/Vaccination/Vaccination.jsx","components/Footer/Footer.jsx","components/Other/LoadingScreen.jsx","components/Pages/Home.jsx","redux/store.js","index.js"],"names":["BasicDataDisplay","countriesData","selectedCountry","isLoading","globalData","useMemo","confirmed","confirmed_daily","deaths","deaths_daily","data","selectedCountryData","country","countryName","getSelectedCountryFromCountriesData","className","toLocaleString","TableRow","countryData","iso","country_iso2s","src","toString","toLowerCase","alt","sortData","sortedElement","sortingDirection","newDataArray","concat","sortedData","sort","a","b","SortOption","optionName","columnName","sortedColumn","setSortedColumn","sortedCountriesData","setSortedCountriesData","useState","sortMode","setSortMode","useEffect","onClick","SortBy","CountriesTable","map","length","Modal","modalContent","setIsActive","createPortal","cloneElement","document","getElementById","HeaderOption","iconId","bodyContent","isActive","onMouseDown","getDate","daysToAdd","format","date","moment","add","dateSlice","createSlice","name","initialState","reducers","changeDate","state","action","payload","actions","DateChange","useSelector","dispatch","useDispatch","year","setYear","month","setMonth","day","setDay","yearRef","useRef","current","focus","handleDateSave","newDate","onKeyDown","e","key","preventDefault","handleEnterClick","handleEscapeClick","ref","type","placeholder","value","onChange","Number","handleYearInput","target","handleMonthInput","handleDayInput","latestDate","handleLatestDate","SearchBox","searchedValue","setSearchedValue","searchBoxRef","CountryChange","setSelectedCountry","countriesList","array","iso2","forEach","push","searchedCountriesList","setSearchedCountriesList","searchedList","filter","includes","searchCountry","activeElement","click","tabIndex","Header","href","Map","mapData","chartType","options","region","colorAxis","colors","legend","useFetch","url","response","setResponse","setIsLoading","error","setError","fetchData","fetch","res","json","ChartSelect","currentOption","setCurrentOption","isOptionActive","setIsOptionActive","dropdownRef","checkIfClickedOutside","contains","addEventListener","removeEventListener","handleOptionSelect","ChartButton","chartMode","setChartMode","ChartOptions","chartRange","setChartRange","useLocalStorage","item","window","localStorage","getItem","JSON","parse","console","log","storedValue","setStoredValue","setItem","stringify","Chart","chartData","setChartData","chartColor","setChartColor","dataName","setDataName","label","setLabel","chartMinDate","subtract","covidData","casesOptions","deathsOptions","convertedData","element","isDateInArray","convertedElement","convertToChartData","labels","datasets","borderColor","fill","tension","backgroundColor","responsive","maintainAspectRatio","elements","point","radius","hoverRadius","hitRadius","plugins","display","tooltips","mode","intersect","scales","y","beginAtZero","x","ticks","maxTicksLimit","useMousePosition","mousePosition","setMousePosition","updateMousePosition","clientX","clientY","Tooltip","props","style","top","left","content","ProgressBar","valueMain","maxValueMain","valueSecondary","maxValueSecondary","mainColor","secondaryColor","mainStyle","width","background","secondaryStyle","isMainTooltipVisible","setIsMainTooltipVisible","isSecondaryTooltipVisible","setIsSecondaryTooltipVisible","onMouseEnter","onMouseLeave","toFixed","ProgressInfoItem","valueName","color","Progress","title","fullyVac","partiallyVac","population","Vaccination","headers","vaccinationGlobalData","errorGlobal","vaccinationCountryData","errorCountry","All","people_vaccinated","people_partially_vaccinated","Footer","openNewPage","open","LoadingScreen","Home","configureStore","reducer","dateReducer","ReactDOM","render","StrictMode","store"],"mappings":"kqBA6FeA,EA1FU,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,UAClDC,EAAaC,mBAAQ,WACvB,IAD6B,EACvBD,EAAa,CACfE,UAAW,EACXC,gBAAiB,EACjBC,OAAQ,EACRC,aAAc,GALW,cAQVR,GARU,IAQ7B,2BAAkC,CAAC,IAAxBS,EAAuB,QAC9BN,EAAWE,WAAaI,EAAKJ,UAC7BF,EAAWG,iBAAmBG,EAAKH,gBACnCH,EAAWI,QAAUE,EAAKF,OAC1BJ,EAAWK,cAAgBC,EAAKD,cAZP,8BAe7B,OAAOL,IACR,CAACH,IASEU,EAPsC,WAAO,IAAD,gBACxBV,GADwB,IAC9C,2BAAqC,CAAC,IAA3BW,EAA0B,QACjC,GAAIA,EAAQA,UAAYV,EAAgBW,YAAa,OAAOD,GAFlB,8BAI9C,OAAO,KAGiBE,GAE5B,OACI,sBAAKC,UAAU,qBAAf,UACI,qBACIA,UAAS,qCACLZ,EAAY,YAAc,IAFlC,UAKKD,EAAgBW,YALrB,iBAQA,sBACIE,UAAS,mCACLZ,EAAY,YAAc,IAFlC,UAKI,sBAAKY,UAAU,gCAAf,UACI,sBAAMA,UAAU,gCAAhB,uBAGA,oBAAGA,UAAU,iCAAb,UACKJ,GACGA,EAAoBJ,gBAAgBS,kBACtCL,GACEP,GACAA,EAAWG,gBAAgBS,uBAMvC,qBAAKD,UAAU,oCAAf,SACI,mBAAGA,UAAU,oDAGrB,sBACIA,UAAS,mCACLZ,EAAY,YAAc,IAFlC,UAKI,sBAAKY,UAAU,gCAAf,UACI,sBAAMA,UAAU,gCAAhB,wBAGA,oBAAGA,UAAU,iCAAb,UACKJ,GACGA,EAAoBF,aAAaO,kBACnCL,GACEP,GACAA,EAAWK,aAAaO,uBAMpC,qBAAKD,UAAU,oCAAf,SACI,mBAAGA,UAAU,wDCClBE,G,MArFE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACVC,EAAMD,EAAYE,cAAc,GAEtC,OACI,qBAAIL,UAAU,YAAd,UACI,oBAAIA,UAAU,gBAAd,SACI,sBAAKA,UAAU,wBAAf,UACKI,GAC2B,mBAAxBD,EAAYN,SACY,WAAxBM,EAAYN,SACY,gBAAxBM,EAAYN,SACR,qBACIS,IAAG,oCAA+BF,EAC7BG,WACAC,cAFF,QAGHC,IAAKN,EAAYN,QAAU,UAId,mBAAxBM,EAAYN,SACT,qBACIS,IAAG,mCACHG,IAAKN,EAAYN,QAAU,UAIV,WAAxBM,EAAYN,SACT,qBACIS,IAAG,mCACHG,IAAKN,EAAYN,QAAU,UAIV,gBAAxBM,EAAYN,SACT,qBACIS,IAAG,mCACHG,IAAKN,EAAYN,QAAU,eAK3C,oBAAIG,UAAU,gBAAd,SACI,sBAAKA,UAAU,+BAAf,UACI,sBAAMA,UAAU,4BAAhB,sBACA,sBAAMA,UAAU,6BAAhB,SACKG,EAAYN,eAIzB,oBAAIG,UAAU,gBAAd,SACI,sBAAKA,UAAU,wBAAf,UACI,sBAAMA,UAAU,qBAAhB,wBACA,sBAAMA,UAAU,sBAAhB,SACKG,EAAYX,gBAAgBS,wBAIzC,oBAAID,UAAU,gBAAd,SACI,sBAAKA,UAAU,wBAAf,UACI,sBAAMA,UAAU,qBAAhB,0BACA,sBAAMA,UAAU,sBAAhB,SACKG,EAAYZ,UAAUU,wBAInC,oBAAID,UAAU,gBAAd,SACI,sBAAKA,UAAU,wBAAf,UACI,sBAAMA,UAAU,qBAAhB,yBACA,sBAAMA,UAAU,sBAAhB,SACKG,EAAYT,aAAaO,wBAItC,oBAAID,UAAU,gBAAd,SACI,sBAAKA,UAAU,wBAAf,UACI,sBAAMA,UAAU,qBAAhB,2BACA,sBAAMA,UAAU,sBAAhB,SACKG,EAAYV,OAAOQ,6BC/D7BS,G,YAhBE,SAACC,EAAehB,GAAqC,IAA/BiB,EAA8B,uDAAX,OAChDC,EAAelB,EAAKmB,SAEpBC,EAAaF,EAAaG,MAAK,SAACC,EAAGC,GACrC,MAAyB,SAArBN,EACOM,EAAEP,GAAiBM,EAAEN,GACA,QAArBC,EACAK,EAAEN,GAAiBO,EAAEP,GAErB,QAIf,OAAOI,IC0CII,EAnDI,SAAC,GAOb,IAAD,IANFC,kBAME,MANW,YAMX,EALFC,EAKE,EALFA,WACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,gBACAC,EAEE,EAFFA,oBACAC,EACE,EADFA,uBAEA,EAAgCC,mBAAS,QAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAGAC,qBAAU,WACFP,IAAiBD,GACjBO,EAAY,UAEjB,CAACN,EAAcD,IAwBlB,OACI,oBACIrB,UAAS,sBACLsB,IAAiBD,EAAa,SAAW,GADpC,YAEQ,QAAbM,EAAqB,MAAQ,QACjCG,QAAS,WA1BTT,IAAeC,GACOM,EAAT,SAAbD,EAAkC,MAAqB,QACvDF,EACIf,EACIW,EACAG,EACa,QAAbG,EAAqB,OAAS,SAG/BN,IAAeC,IACtBC,EAAgBF,GAChBI,EACIf,EACIW,EACAG,EACa,QAAbG,EAAqB,MAAQ,WAOzC,SAMKP,KCMEW,EApDA,SAAC,GAIT,IAHH7C,EAGE,EAHFA,cACAsC,EAEE,EAFFA,oBACAC,EACE,EADFA,uBAEA,EAAwCC,mBAAS,mBAAjD,mBAAOJ,EAAP,KAAqBC,EAArB,KAMA,OAJAM,qBAAU,WACNN,EAAgB,qBACjB,CAACrC,IAGA,oBAAIc,UAAU,UAAd,SACI,qBAAIA,UAAU,gBAAd,UACI,oBAAIA,UAAU,gBAAd,sBACA,cAAC,EAAD,CACIoB,WAAW,YACXE,aAAcA,EACdC,gBAAiBA,EACjBF,WAAW,kBACXG,oBAAqBA,EACrBC,uBAAwBA,IAE5B,cAAC,EAAD,CACIL,WAAW,cACXE,aAAcA,EACdC,gBAAiBA,EACjBF,WAAW,YACXG,oBAAqBA,EACrBC,uBAAwBA,IAE5B,cAAC,EAAD,CACIL,WAAW,aACXE,aAAcA,EACdC,gBAAiBA,EACjBF,WAAW,eACXG,oBAAqBA,EACrBC,uBAAwBA,IAE5B,cAAC,EAAD,CACIL,WAAW,eACXE,aAAcA,EACdC,gBAAiBA,EACjBF,WAAW,SACXG,oBAAqBA,EACrBC,uBAAwBA,UCG7BO,G,MA9CQ,SAAC,GAAkC,IAAhC9C,EAA+B,EAA/BA,cAAeE,EAAgB,EAAhBA,UACrC,EAAsDsC,oBAAS,kBAC3DhB,EAAS,kBAAmBxB,EAAe,WAD/C,mBAAOsC,EAAP,KAA4BC,EAA5B,KAUA,OANAI,qBAAU,WACNJ,EACIf,EAAS,kBAAmBxB,EAAe,WAEhD,CAACA,IAGA,wBAAOc,UAAS,0BAAqBZ,EAAY,YAAc,IAA/D,UACI,uBAAOY,UAAU,yBAAjB,SACI,qBAAIA,UAAU,sBAAd,UACI,oBAAIA,UAAU,yBAAd,yCAGA,cAAC,EAAD,CACId,cAAeA,EACfsC,oBAAqBA,EACrBC,uBAAwBA,SAIpC,uBAAOzB,UAAU,yBAAjB,SACKwB,GACGA,EAAoBS,KAAI,SAAC9B,GACrB,OACIA,EAAYZ,WACZY,EAAYV,QACZU,EAAYE,cAAc6B,OAGtB,cAAC,EAAD,CACI/B,YAAaA,GACRA,EAAYN,SAGf,eChCvBsC,G,YATD,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YAC3B,OAAOC,uBACH,qBAAKtC,UAAU,QAAf,SACKoC,GAAgBG,uBAAaH,EAAc,CAAEC,kBAElDG,SAASC,eAAe,iBCSjBC,G,MAdM,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,YAAaR,EAAmB,EAAnBA,aACzC,EAAgCV,oBAAS,GAAzC,mBAAOmB,EAAP,KAAiBR,EAAjB,KAEA,OACI,sBAAKrC,UAAU,gBAAgB8C,YAAa,kBAAMT,GAAY,IAA9D,UACI,mBAAGrC,UAAS,8BAAyB2C,KACrC,qBAAK3C,UAAU,sBAAf,SAAsC4C,IACrCC,GAAYT,GACT,cAAC,EAAD,CAAOC,YAAaA,EAAaD,aAAcA,S,wBCJhDW,EANC,WAA2C,IAA1CC,EAAyC,uDAA7B,EAAGC,EAA0B,uDAAjB,aAC/BC,EAAOC,MAASC,IAAIJ,EAAW,QAAQC,OAAOA,GAEpD,OAAOC,G,eCFEG,EAAYC,YAAY,CACjCC,KAAM,OACNC,aAAc,CACVN,KAAM,cAEVO,SAAU,CACNC,WAAY,SAACC,EAAOC,GAChBD,EAAMT,KAAOU,EAAOC,YAKjBH,EAAeL,EAAUS,QAAzBJ,WAEAL,IAAf,QCkHeU,EA5HI,SAAC,GAAqB,IAAnB1B,EAAkB,EAAlBA,YACZa,EAAOc,aAAY,SAACL,GAAD,OAAWA,EAAMT,KAAKA,QACzCe,EAAWC,cAEjB,EAAwBxC,mBAASyB,IAAOD,GAAMD,OAAO,SAArD,mBAAOkB,EAAP,KAAaC,EAAb,KACA,EAA0B1C,mBAASyB,IAAOD,GAAMD,OAAO,OAAvD,mBAAOoB,EAAP,KAAcC,EAAd,KACA,EAAsB5C,mBAASyB,IAAOD,GAAMD,OAAO,OAAnD,mBAAOsB,EAAP,KAAYC,EAAZ,KAEMC,EAAUC,mBAEhB7C,qBAAU,WACN4C,EAAQE,QAAQC,UACjB,IAIH,IAgCMC,EAAiB,WACnB,GAAIV,GAAQE,GAASE,EAAK,CACtB,IAAMO,EAAU3B,IAAO,GAAD,OAAIgB,EAAJ,YAAYE,EAAZ,YAAqBE,GAAO,cAGlDN,EAASP,EAAWoB,EAAQ7B,OAAO,gBACnCZ,GAAY,KAYpB,OACI,sBACIrC,UAAU,cACV+E,UAAW,SAACC,IArDK,SAACA,GACR,UAAVA,EAAEC,MACFD,EAAEE,iBACFL,KAmDIM,CAAiBH,GA/CH,SAACA,GACT,WAAVA,EAAEC,MACFD,EAAEE,iBACF7C,GAAY,IA6CR+C,CAAkBJ,IAJ1B,UAOI,sBAAKhF,UAAU,sBAAf,UACI,oBAAIA,UAAU,qBAAd,yBACA,mBACIA,UAAU,kCACV8B,QAAS,kBAAMO,GAAY,SAGnC,sBAAKrC,UAAU,4BAAf,UACI,uBACIqF,IAAKZ,EACLa,KAAK,SACLC,YAAY,OACZvF,UAAU,qBACVwF,MAAOrB,EACPsB,SAAU,SAACT,GAAD,OA1DF,SAACb,IACjBuB,OAAOvB,IAASuB,OAAOvC,MAASF,OAAO,UAAqB,KAATkB,IACnDC,EAAQD,GAwDiBwB,CAAgBX,EAAEY,OAAOJ,UAE9C,uBACIF,KAAK,SACLC,YAAY,KACZvF,UAAU,qBACVwF,MAAOnB,EACPoB,SAAU,SAACT,GAAD,OA3DD,SAACX,IACjBA,GAAS,GAAKA,GAAS,IAAiB,KAAVA,IAC/BC,EAASD,GAyDgBwB,CAAiBb,EAAEY,OAAOJ,UAE/C,uBACIF,KAAK,SACLC,YAAY,KACZvF,UAAU,qBACVwF,MAAOjB,EACPkB,SAAU,SAACT,GAAD,OA5DH,SAACT,IACfA,GAAO,GAAKA,GAAO,IAAe,KAARA,IAC3BC,EAAOD,GA0DkBuB,CAAed,EAAEY,OAAOJ,aAIjD,sBAAKxF,UAAU,6BAAf,UACI,wBACIA,UAAU,sBACV8B,QAAS,kBAAM+C,KAFnB,kBAMA,wBACI7E,UAAU,sBACV8B,QAAS,kBAzDA,WACrB,IAAMiE,EAAahD,GAAS,GAE5BqB,EAAQjB,IAAO4C,GAAY9C,OAAO,SAClCqB,EAASnB,IAAO4C,GAAY9C,OAAO,OACnCuB,EAAOrB,IAAO4C,GAAY9C,OAAO,OAoDN+C,IAFnB,gCC/FDC,G,YAtBG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAC1BC,EAAe1B,mBAMrB,OAJA7C,qBAAU,WACNuE,EAAazB,QAAQC,UACtB,IAGC,sBAAK5E,UAAU,aAAf,UACI,uBACIqF,IAAKe,EACLd,KAAK,OACLE,MAAOU,EACPT,SAAU,SAACT,GAAD,OAAOmB,EAAiBnB,EAAEY,OAAOJ,QAC3CD,YAAY,SACZvF,UAAU,sBAEd,mBAAGA,UAAU,yCCsGVqG,EAtHO,SAAC,GAAwD,IAAtDhE,EAAqD,EAArDA,YAAanD,EAAwC,EAAxCA,cAAeoH,EAAyB,EAAzBA,mBAE3CC,EAAgBjH,mBAAQ,WAC1B,IAAMkH,EAAQ,CACV,CACI1G,YAAa,SACb2G,KAAM,OAad,OATAvH,EAAcwH,SAAQ,SAAC7G,GACfA,EAAQA,SAAWA,EAAQQ,eAC3BmG,EAAMG,KAAK,CACP7G,YAAaD,EAAQA,QACrB4G,KAAM5G,EAAQQ,cAAc,QAKjCmG,IACR,CAACtH,IAEJ,EACIwC,mBAAS6E,GADb,mBAAOK,EAAP,KAA8BC,EAA9B,KAEA,EAA0CnF,mBAAS,IAAnD,mBAAOwE,EAAP,KAAsBC,EAAtB,KAiBAtE,qBAAU,YAfY,SAACqE,EAAeK,GAClC,IAAMO,EAAeP,EAAcQ,QAAO,SAAClH,GACvC,OACIA,EAAQC,YACHU,cACAwG,SAASd,EAAc1F,eAErBX,EAEJ,QAGXgH,EAAyBC,GAIzBG,CAAcf,EAAeK,KAC9B,CAACL,EAAeK,IAqBnB,OACI,sBACIvG,UAAU,iBACV+E,UAAW,SAACC,IAtBK,SAACA,GACR,UAAVA,EAAEC,MACFD,EAAEE,iBACF1C,SAAS0E,cAAcC,SAoBnBhC,CAAiBH,GAhBH,SAACA,GACT,WAAVA,EAAEC,MACFD,EAAEE,iBACF7C,GAAY,IAcR+C,CAAkBJ,IAJ1B,UAOI,sBAAKhF,UAAU,yBAAf,UACI,oBAAIA,UAAU,wBAAd,4BACA,mBACIA,UAAU,qCACV8B,QAAS,kBAAMO,GAAY,SAGnC,cAAC,EAAD,CACI6D,cAAeA,EACfC,iBAAkBA,IAEtB,oBAAInG,UAAU,iCAAd,SACK4G,EAAsB3E,KAAI,YAA4B,IAAzBnC,EAAwB,EAAxBA,YAAa2G,EAAW,EAAXA,KACvC,OAAIA,GAAwB,WAAhB3G,EAEJ,qBACIE,UAAU,sCACV8B,QAAS,kBA7BjCwE,EA8B+C,CAAExG,cAAa2G,cA7B9DpE,GAAY,IA+BY+E,SAAU,EALd,UAQKX,GACG,qBACIzG,UAAU,+BACVM,IAAG,oCAA+BmG,EAAKjG,cAApC,QACHC,IAAKX,EAAc,UAGV,WAAhBA,GACG,mBAAGE,UAAU,8CAEjB,sBAAMA,UAAU,eAAhB,SACKF,MAbAA,GAkBV,cC9EZuH,EA/BA,SAAC,GAA4D,IAA1DlI,EAAyD,EAAzDA,gBAAiBmH,EAAwC,EAAxCA,mBAAoBpH,EAAoB,EAApBA,cAC7CgE,EAAOc,aAAY,SAACL,GAAD,OAAWA,EAAMT,KAAKA,QAE/C,OACI,yBAAQlD,UAAU,SAAlB,UACI,oBAAGA,UAAU,eAAesH,KAAK,IAAjC,UACI,oBAAItH,UAAU,eAAd,2BACA,mBAAGA,UAAU,mCAEjB,sBAAKA,UAAU,kBAAf,UACI,cAAC,EAAD,CACI2C,OAAO,cACPC,YAAazD,EAAgBW,YAC7BsC,aACI,cAAC,EAAD,CACIlD,cAAeA,EACfW,QAASV,EACTmH,mBAAoBA,MAIhC,cAAC,EAAD,CACI3D,OAAO,sBACPC,YAAaM,EACbd,aAAc,cAAC,EAAD,a,QCOnBmF,G,MAlCH,SAAC,GAAmD,IAAjDrI,EAAgD,EAAhDA,cAAeC,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,UACrCoI,EAAU,CAAC,CAAC,UAAW,UAiB7B,OAfAtI,EAAcwH,SAAQ,YAAyC,IAAtCrG,EAAqC,EAArCA,cAAeb,EAAsB,EAAtBA,gBACpC,GAAIA,EACA,GAAIa,EAAc6B,OAAS,EACvB7B,EAAcqG,SAAQ,SAACtG,GACnB,IAAMT,EAAO,CAACS,EAAKZ,GACfA,EAAkB,IAAGG,EAAK,GAAK,GACnC6H,EAAQb,KAAKhH,UAEd,CACH,IAAMA,EAAO,CAACU,EAAc,GAAIb,GAChCgI,EAAQb,KAAKhH,OAMrB,qBAAKK,UAAS,cAASZ,EAAY,YAAc,IAAjD,SACI,cAAC,IAAD,CACIY,UAAS,gBACTyH,UAAU,WACV9H,KAAM6H,EACNE,QAAS,CACLC,OAAQxI,EAAgBsH,KACxBmB,UAAW,CAAEC,OAAQ,CAAC,UAAW,UAAW,YAC5CC,OAAQ,c,yCCFbC,EA1BE,SAACC,EAAKN,GACnB,MAAgChG,mBAAS,MAAzC,mBAAOuG,EAAP,KAAiBC,EAAjB,KACA,EAAkCxG,oBAAS,GAA3C,mBAAOtC,EAAP,KAAkB+I,EAAlB,KACA,EAA0BzG,mBAAS,MAAnC,mBAAO0G,EAAP,KAAcC,EAAd,KAoBA,OAlBAxG,qBAAU,WACNsG,GAAa,GACb,IAAMG,EAAS,uCAAG,8BAAArH,EAAA,+EAEQsH,MAAMP,EAAKN,GAFnB,cAEJc,EAFI,gBAGSA,EAAIC,OAHb,OAGJ9I,EAHI,OAKVuI,EAAYvI,GACZwI,GAAa,GANH,kDAQVE,EAAS,EAAD,IACRF,GAAa,GATH,0DAAH,qDAYfG,MAED,CAACN,IAEG,CAAEC,WAAU7I,YAAWgJ,UCgCnBM,G,YAtDK,SAAC,GAAkD,IAAhDhB,EAA+C,EAA/CA,QAASiB,EAAsC,EAAtCA,cAAeC,EAAuB,EAAvBA,iBAC3C,EAA4ClH,oBAAS,GAArD,mBAAOmH,EAAP,KAAuBC,EAAvB,KACMC,EAAcrE,mBAGpB7C,qBAAU,WACN,IAAMmH,EAAwB,SAAChE,GAEvB6D,GACAE,EAAYpE,UACXoE,EAAYpE,QAAQsE,SAASjE,EAAEY,SAEhCkD,GAAkB,IAM1B,OAFAtG,SAAS0G,iBAAiB,YAAaF,GAEhC,WACHxG,SAAS2G,oBAAoB,YAAaH,MAE/C,CAACH,IAOJ,OACI,sBACI7I,UAAU,eACV8B,QAAS,SAACkD,GAAD,OAAQ6D,GAAkBC,GAAkB,IAFzD,UAIKH,EACAE,GACG,oBAAI7I,UAAU,yBAAyBqF,IAAK0D,EAA5C,SACKrB,GACGA,EAAQzF,KAAI,YAAsB,IAAnBuD,EAAkB,EAAlBA,MAAOjC,EAAW,EAAXA,KAClB,OACI,oBACIvD,UAAU,uBACV8B,QAAS,kBAlBd,SAAC0D,GACxBoD,EAAiBpD,GACjBsD,GAAkB,GAgByBM,CAAmB5D,IAFtC,SAKKjC,GAFIiC,aC9B1B6D,G,MAbK,SAAC,GAAmD,IAAjD/D,EAAgD,EAAhDA,KAAMlE,EAA0C,EAA1CA,WAAYkI,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAChD,OACI,wBACIvJ,UAAS,mCAA8BsF,EAAO,KAAOA,EAAO,GAAnD,YACLgE,IAAchE,EAAO,SAAW,IAEpCxD,QAAS,kBAAMyH,EAAajE,IAJhC,SAMKlE,MC6BEoI,EAnCM,SAAC,GAKf,IAJHC,EAIE,EAJFA,WACAC,EAGE,EAHFA,cACAJ,EAEE,EAFFA,UACAC,EACE,EADFA,aAQA,OACI,sBAAKvJ,UAAU,gBAAf,UACI,cAAC,EAAD,CACI0H,QATc,CACtB,CAAElC,MAAO,EAAGjC,KAAM,UAClB,CAAEiC,MAAO,GAAIjC,KAAM,WACnB,CAAEiC,MAAO,GAAIjC,KAAM,YAOXoF,cAAa,UAAKc,EAAL,SACbb,iBAAkBc,IAEtB,cAAC,EAAD,CACIpE,KAAK,QACLlE,WAAW,YACXkI,UAAWA,EACXC,aAAcA,IAElB,cAAC,EAAD,CACIjE,KAAK,SACLlE,WAAW,aACXkI,UAAWA,EACXC,aAAcA,QCPfI,EAxBS,SAAC1E,EAAKO,GAC1B,MAAsC9D,oBAAS,WAC3C,IACI,IAAMkI,EAAOC,OAAOC,aAAaC,QAAQ9E,GAEzC,OAAI2E,EAAaI,KAAKC,MAAML,GACrBpE,EACT,MAAO4C,GACL8B,QAAQC,IAAI/B,OAPpB,mBAAOgC,EAAP,KAAoBC,EAApB,KAoBA,MAAO,CAACD,EATS,SAAC5E,GACd,IACI6E,EAAe7E,GACfqE,OAAOC,aAAaQ,QAAQrF,EAAK+E,KAAKO,UAAU/E,IAClD,MAAO4C,GACL8B,QAAQC,IAAI/B,OCuIToC,EAjJD,SAAC,GAAoC,IAAlCrL,EAAiC,EAAjCA,gBAAiBC,EAAgB,EAAhBA,UACxB8D,EAAOc,aAAY,SAACL,GAAD,OAAWA,EAAMT,KAAKA,QAE/C,EAAkCxB,mBAAS,MAA3C,mBAAO+I,EAAP,KAAkBC,EAAlB,KACA,EAAoCf,EAAgB,aAAc,IAAlE,mBAAOF,EAAP,KAAmBC,EAAnB,KACA,EAAkChI,mBAAS,SAA3C,mBAAO4H,EAAP,KAAkBC,EAAlB,KAEA,EAAoC7H,mBAAS,gBAA7C,mBAAOiJ,EAAP,KAAmBC,EAAnB,KACA,EAAgClJ,mBAAS,mBAAzC,mBAAOmJ,EAAP,KAAiBC,EAAjB,KACA,EAA0BpJ,mBAAS,aAAnC,mBAAOqJ,EAAP,KAAcC,EAAd,KAEMC,EAAe9H,IAAOD,GACvBgI,SAASzB,EAAY,QACrBxG,OAAO,cACN+E,EAAG,qIACL7I,GAAmD,WAAhCA,EAAgBW,YAAnC,kBACiBX,EAAgBW,YADjC,KAEM,GAHD,oBAIGmL,EAJH,qBAI4B/H,EAJ5B,uJAKT,EAAuC6E,EAASC,EAAK,IAAnCmD,EAAlB,EAAQlD,SAAR,EAA6BG,MAE7BvG,qBAAU,WACN,IAAMuJ,EAEQ,kBAFRA,EAGK,YAGLC,EACU,aADVA,EAEQ,eAFRA,EAGK,aAGO,UAAd/B,GACAsB,EAZY,gBAaZE,EAAYM,GACZJ,EAASI,IACY,WAAd9B,IACPsB,EAAcS,GACdP,EAAYO,GACZL,EAASK,MAEd,CAAC/B,IAEJzH,qBAAU,WA4BFsJ,GACAT,EA3BuB,SAAC/K,GACxB,IAAM2L,EAAgB,GAsBtB,OApBA3L,EAAK+G,SAAQ,SAAC6E,GACV,IAAIC,GAAgB,EAEpBF,EAAc5E,SAAQ,SAAC+E,GAEfA,GACAA,EAAiBvI,OAASqI,EAAQrI,OAElCuI,EAAiBjM,iBACb+L,EAAQ/L,gBACZiM,EAAiB/L,cAAgB6L,EAAQ7L,aAEzC8L,GAAgB,MAGnBA,GACDF,EAAc3E,KAAK4E,MAIpBD,EAIMI,CAAmBP,MAErC,CAACA,IAEJ,IAAMxL,EAAO,CACTgM,OACIlB,GACAA,EAAUxI,KAAI,gBAAGiB,EAAH,EAAGA,KAAH,OAAcC,IAAOD,GAAMD,OAAO,aACpD2I,SAAU,CACN,CACIb,MAAOA,EACPpL,KACI8K,GAAaA,EAAUxI,KAAI,SAACsJ,GAAD,OAAaA,EAAQV,MACpDgB,YAAY,QAAD,OAAUlB,EAAV,QACXmB,MAAM,EACNC,QAAS,GACTC,gBAAgB,QAAD,OAAUrB,EAAV,aAKrBjD,EAAU,CACZuE,YAAY,EACZC,qBAAqB,EACrBC,SAAU,CACNC,MAAO,CACHC,OAAQ,EACRC,YAAa,EACbC,UAAW,MAGnBC,QAAS,CACL1E,OAAQ,CACJ2E,SAAS,GAEbC,SAAU,CACNC,KAAM,QACNC,WAAW,IAGnBC,OAAQ,CACJC,EAAG,CACCC,aAAa,GAEjBC,EAAG,CACCC,MAAO,CACHC,cACIzC,GAAaA,EAAUvI,QAAUuI,EAAUvI,OAAS,OAMxE,OACI,sBAAKlC,UAAS,QAAd,UACI,qBAAIA,UAAU,eAAd,UACKb,EAAgBW,YADrB,YAGA,cAAC,EAAD,CACI2J,WAAYA,EACZC,cAAeA,EACfJ,UAAWA,EACXC,aAAcA,IAElB,qBAAKvJ,UAAS,sBAAiBZ,EAAY,YAAc,IAAzD,SACI,cAAC,IAAD,CAAMO,KAAMA,EAAM+H,QAASA,UClI5ByF,G,wBAhBU,WACrB,MAA0CzL,mBAAS,CAAEsL,EAAG,KAAMF,EAAG,OAAjE,mBAAOM,EAAP,KAAsBC,EAAtB,KAYA,OAVAxL,qBAAU,WACN,IAAMyL,EAAsB,SAACtI,GAAD,OACxBqI,EAAiB,CAAEL,EAAGhI,EAAEuI,QAAST,EAAG9H,EAAEwI,WAI1C,OAFA3D,OAAOX,iBAAiB,YAAaoE,GAE9B,WACHzD,OAAOV,oBAAoB,YAAamE,MAE7C,IACIF,ICQIK,EAnBC,SAACC,GACb,IAAMN,EAAgBD,IAEhBQ,EAAQ,CACVC,IAAKR,EAAcN,EAAI,GACvBe,KAAMT,EAAcJ,EAAI,IAO5B,OACI,qBAAKhN,UAAU,UAAU2N,MAAOA,EAAhC,SACKD,EAAMI,WC8CJC,EA5DK,SAAC,GAQd,IAPHC,EAOE,EAPFA,UACAC,EAME,EANFA,aACAC,EAKE,EALFA,eACAC,EAIE,EAJFA,kBACAC,EAGE,EAHFA,UACAC,EAEE,EAFFA,eACAjP,EACE,EADFA,UAEMkP,EAAY,CACdC,MAAM,GAAD,OAAMP,EAAYC,EAAgB,IAAlC,KACLO,WAAYJ,GAGVK,EAAiB,CACnBF,MAAM,GAAD,OAAML,EAAiBC,EAAqB,IAA5C,KACLK,WAAYH,GAGhB,EAAwD3M,oBAAS,GAAjE,mBAAOgN,EAAP,KAA6BC,EAA7B,KACA,EACIjN,oBAAS,GADb,mBAAOkN,EAAP,KAAkCC,EAAlC,KAGA,OACI,sBAAK7O,UAAU,eAAf,UACI,qBACIA,UAAU,qBACV2N,MAAOW,EACPQ,aAAc,kBAAM1P,GAAauP,GAAwB,IACzDI,aAAc,kBAAM3P,GAAauP,GAAwB,MAE5DD,GACG,cAAC,EAAD,CACIZ,QAAO,WAAOE,EAAYC,EAAgB,KAAKe,QAC3C,GADG,QAKf,qBACIhP,UAAU,0BACV2N,MAAOc,EACPK,aAAc,kBACV1P,GAAayP,GAA6B,IAE9CE,aAAc,kBACV3P,GAAayP,GAA6B,MAGjDD,GACG,cAAC,EAAD,CACId,QAAO,WACFI,EAAiBC,EAClB,KACFa,QAAQ,GAHH,YChCZC,G,MApBU,SAAC,GAAiC,IAA/BzJ,EAA8B,EAA9BA,MAAO0J,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC1C,OACI,qBAAInP,UAAU,qBAAd,UACI,qBAAKA,UAAU,2BAAf,SACI,mBACIA,UAAU,oCACV2N,MAAO,CAAEwB,MAAOA,OAGxB,sBAAKnP,UAAU,4BAAf,UACI,sBAAMA,UAAU,2BAAhB,SAA4CkP,IAC5C,uBAAMlP,UAAU,4BAAhB,UACKwF,GAASA,EAAMvF,kBACduF,GAAS,2BCsChB4J,EAjDE,SAAC,GAOX,IANHC,EAME,EANFA,MACAC,EAKE,EALFA,SACAC,EAIE,EAJFA,aACAC,EAGE,EAHFA,WAGE,IAFF3M,gBAEE,SADFzD,EACE,EADFA,UAEA,OACI,sBAAKY,UAAS,mBAAcZ,EAAY,YAAc,IAAtD,UACI,qBAAKY,UAAU,mBAAf,SACI,oBAAIA,UAAU,iBAAd,SAAgCqP,MAGnCxM,GACG,cAAC,EAAD,CACImL,UAAWsB,EACXrB,aAAcuB,EACdtB,eAAgBqB,EAChBpB,kBAAmBqB,EACnBpB,UAAU,UACVC,eAAe,UACfjP,UAAWA,KAIjByD,GAAY,cAAC,EAAD,IAEd,qBAAI7C,UAAU,sBAAd,UACI,cAAC,EAAD,CACIwF,MAAO8J,EACPJ,UAAW,mBACXC,MAAO,YAEX,cAAC,EAAD,CACI3J,MAAO+J,EACPL,UAAW,uBACXC,MAAO,YAEX,cAAC,EAAD,CACI3J,MAAOgK,EACPN,UAAW,aACXC,MAAO,mBCsBZM,EA/DK,SAAC,GAAyB,IAAvBtQ,EAAsB,EAAtBA,gBACnB,EAAyD4I,EACrD,8DACA,CACI2H,QAAS,CAAE,eAAgB,sBAHjBC,EAAlB,EAAQ1H,SAOR,GAPA,EAAyC2H,YAWrC7H,EAAS,wDAAD,OACgD5I,EAAgBW,aACxE,CACI4P,QAAS,CAAE,eAAgB,uBANrBG,EADd,EACI5H,SACA7I,EAFJ,EAEIA,UAFJ,EAGI0Q,aAQJ,OACI,sBAAK9P,UAAU,cAAf,UACI,oBAAIA,UAAU,qBAAd,+BACA,sBAAKA,UAAU,oBAAf,2BAAkD+C,OACjD8M,GACmC,WAAhC1Q,EAAgBW,aACZ,cAAC,EAAD,CACIuP,MAAK,UAAKlQ,EAAgBW,YAArB,aACLwP,SAAUO,EAAuBE,IAAIC,kBACrCT,aACIM,EAAuBE,IAClBE,4BAETT,WAAYK,EAAuBE,IAAIP,WACvC3M,UAAU,EACVzD,UAAWA,IAItByQ,GACmC,WAAhC1Q,EAAgBW,aACZ,cAAC,EAAD,CACIuP,MAAO,sBACPC,SAAS,IACTC,aAAa,IACbC,WAAW,MAItBG,GACG,cAAC,EAAD,CACIN,MAAM,kBACNC,SAAUK,EAAsBI,IAAIC,kBACpCT,aACII,EAAsBI,IAAIE,4BAE9BT,WAAYG,EAAsBI,IAAIP,WACtC3M,UAAU,QC1BfqN,G,MAjCA,WACX,IAAMC,EAAc,SAACnI,GACjB6B,OAAOuG,KAAKpI,EAAK,WAGrB,OACI,yBAAQhI,UAAU,SAAlB,UACI,oBAAGA,UAAU,oBAAb,UACK,IADL,0BAEiC,gDAFjC,WAIA,qBAAIA,UAAU,uBAAd,UACI,oBACIA,UAAU,uBACV8B,QAAS,kBAAMqO,EAAY,+BAF/B,SAII,mBAAGnQ,UAAU,+CAEjB,oBACIA,UAAU,uBACV8B,QAAS,kBACLqO,EACI,2DAJZ,SAQI,mBAAGnQ,UAAU,kDClBlBqQ,G,MARO,WAClB,OACI,qBAAKrQ,UAAU,iBAAf,SACI,qBAAKA,UAAU,6BCyEZsQ,EA/DF,WACT,IAAMpN,EAAOc,aAAY,SAACL,GAAD,OAAWA,EAAMT,KAAKA,QAG/C,EAA8CyG,EAC1C,kBACA,CACI7J,YAAa,SACb2G,KAAM,OAJd,mBAAOtH,EAAP,KAAwBmH,EAAxB,KASM0B,EAAG,+IAA2I9E,EAA3I,qBAA4JA,GAIrK,EAII6E,EAASC,EAPQ,CACjB0H,QAAS,CAAE,eAAgB,sBAGjBxQ,EADd,EACI+I,SACA7I,EAFJ,EAEIA,UAFJ,EAGIgJ,MAGJ,OACI,sBAAKpI,UAAU,OAAf,WACMd,GAAiB,cAAC,EAAD,IAElBA,GACG,qCACI,cAAC,EAAD,CACIC,gBAAiBA,EACjBmH,mBAAoBA,EACpBpH,cAAeA,IAEnB,cAAC,EAAD,CACIA,cAAeA,EACfC,gBAAiBA,EACjBC,UAAWA,IAEf,cAAC,EAAD,CACIF,cAAeA,EACfE,UAAWA,IAEf,cAAC,EAAD,CACIF,cAAeA,EACfC,gBAAiBA,EACjBC,UAAWA,IAEf,cAAC,EAAD,CACID,gBAAiBA,EACjBC,UAAWA,IAEf,cAAC,EAAD,CACID,gBAAiBA,EACjBC,UAAWA,IAEf,cAAC,EAAD,WCpELmR,cAAe,CAC1BC,QAAS,CACLtN,KAAMuN,KCEdC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRrO,SAASC,eAAe,Y","file":"static/js/main.e779b71d.chunk.js","sourcesContent":["import { useMemo } from 'react';\nimport './BasicDataDisplay.scss';\n\nconst BasicDataDisplay = ({ countriesData, selectedCountry, isLoading }) => {\n    const globalData = useMemo(() => {\n        const globalData = {\n            confirmed: 0,\n            confirmed_daily: 0,\n            deaths: 0,\n            deaths_daily: 0,\n        };\n\n        for (const data of countriesData) {\n            globalData.confirmed += data.confirmed;\n            globalData.confirmed_daily += data.confirmed_daily;\n            globalData.deaths += data.deaths;\n            globalData.deaths_daily += data.deaths_daily;\n        }\n\n        return globalData;\n    }, [countriesData]);\n\n    const getSelectedCountryFromCountriesData = () => {\n        for (const country of countriesData) {\n            if (country.country === selectedCountry.countryName) return country;\n        }\n        return null;\n    };\n\n    const selectedCountryData = getSelectedCountryFromCountriesData();\n\n    return (\n        <div className=\"basic-data-display\">\n            <h2\n                className={`basic-data-display__header ${\n                    isLoading ? 'isLoading' : ''\n                }`}\n            >\n                {selectedCountry.countryName} Statistics\n            </h2>\n\n            <div\n                className={`basic-data-display__data ${\n                    isLoading ? 'isLoading' : ''\n                }`}\n            >\n                <div className=\"basic-data-display__data-left\">\n                    <span className=\"basic-data-display__data-name\">\n                        New cases\n                    </span>\n                    <p className=\"basic-data-display__data-value\">\n                        {selectedCountryData &&\n                            selectedCountryData.confirmed_daily.toLocaleString()}\n                        {!selectedCountryData &&\n                            globalData &&\n                            globalData.confirmed_daily.toLocaleString()}\n                        {/* <span className=\"basic-data-display__data-new-value plus\">\n                            +2412\n                        </span> */}\n                    </p>\n                </div>\n                <div className=\"basic-data-display__data-icon-box\">\n                    <i className=\"basic-data-display__data-icon fas fa-virus\"></i>\n                </div>\n            </div>\n            <div\n                className={`basic-data-display__data ${\n                    isLoading ? 'isLoading' : ''\n                }`}\n            >\n                <div className=\"basic-data-display__data-left\">\n                    <span className=\"basic-data-display__data-name\">\n                        New Deaths\n                    </span>\n                    <p className=\"basic-data-display__data-value\">\n                        {selectedCountryData &&\n                            selectedCountryData.deaths_daily.toLocaleString()}\n                        {!selectedCountryData &&\n                            globalData &&\n                            globalData.deaths_daily.toLocaleString()}\n                        {/* <span className=\"basic-data-display__data-new-value minus\">\n                            -10\n                        </span> */}\n                    </p>\n                </div>\n                <div className=\"basic-data-display__data-icon-box\">\n                    <i className=\"basic-data-display__data-icon fas fa-cross\"></i>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BasicDataDisplay;\n","import './TableRow.scss';\n\nconst TableRow = ({ countryData }) => {\n    const iso = countryData.country_iso2s[0];\n\n    return (\n        <tr className=\"table-row\">\n            <td className=\"table-row__td\">\n                <div className=\"table-row__td-wrapper\">\n                    {iso &&\n                        countryData.country !== 'United Kingdom' &&\n                        countryData.country !== 'France' &&\n                        countryData.country !== 'Netherlands' && (\n                            <img\n                                src={`https://flagcdn.com/24x18/${iso\n                                    .toString()\n                                    .toLowerCase()}.png`}\n                                alt={countryData.country + ' flag'}\n                            ></img>\n                        )}\n                    {/* Broken ISO2s exceptions*/}\n                    {countryData.country === 'United Kingdom' && (\n                        <img\n                            src={`https://flagcdn.com/24x18/gb.png`}\n                            alt={countryData.country + ' flag'}\n                        ></img>\n                    )}\n\n                    {countryData.country === 'France' && (\n                        <img\n                            src={`https://flagcdn.com/24x18/fr.png`}\n                            alt={countryData.country + ' flag'}\n                        ></img>\n                    )}\n\n                    {countryData.country === 'Netherlands' && (\n                        <img\n                            src={`https://flagcdn.com/24x18/nl.png`}\n                            alt={countryData.country + ' flag'}\n                        ></img>\n                    )}\n                </div>\n            </td>\n            <td className=\"table-row__td\">\n                <div className=\"table-row__td-wrapper--first\">\n                    <span className=\"table-row__td-name--first\">Country:</span>\n                    <span className=\"table-row__td-value--first\">\n                        {countryData.country}\n                    </span>\n                </div>\n            </td>\n            <td className=\"table-row__td\">\n                <div className=\"table-row__td-wrapper\">\n                    <span className=\"table-row__td-name\">New Cases:</span>\n                    <span className=\"table-row__td-value\">\n                        {countryData.confirmed_daily.toLocaleString()}\n                    </span>\n                </div>\n            </td>\n            <td className=\"table-row__td\">\n                <div className=\"table-row__td-wrapper\">\n                    <span className=\"table-row__td-name\">Total Cases:</span>\n                    <span className=\"table-row__td-value\">\n                        {countryData.confirmed.toLocaleString()}\n                    </span>\n                </div>\n            </td>\n            <td className=\"table-row__td\">\n                <div className=\"table-row__td-wrapper\">\n                    <span className=\"table-row__td-name\">New Deaths:</span>\n                    <span className=\"table-row__td-value\">\n                        {countryData.deaths_daily.toLocaleString()}\n                    </span>\n                </div>\n            </td>\n            <td className=\"table-row__td\">\n                <div className=\"table-row__td-wrapper\">\n                    <span className=\"table-row__td-name\">Total Deaths:</span>\n                    <span className=\"table-row__td-value\">\n                        {countryData.deaths.toLocaleString()}\n                    </span>\n                </div>\n            </td>\n        </tr>\n    );\n};\n\nexport default TableRow;\n","const sortData = (sortedElement, data, sortingDirection = 'desc') => {\n    const newDataArray = data.concat();\n\n    const sortedData = newDataArray.sort((a, b) => {\n        if (sortingDirection === 'desc') {\n            return b[sortedElement] - a[sortedElement];\n        } else if (sortingDirection === 'asc') {\n            return a[sortedElement] - b[sortedElement];\n        } else {\n            return null;\n        }\n    });\n\n    return sortedData;\n};\n\nexport default sortData;\n","import { useEffect, useState } from 'react';\nimport './SortOption.scss';\nimport sortData from '../../scripts/sortData';\n\nconst SortOption = ({\n    optionName = 'New cases',\n    columnName,\n    sortedColumn,\n    setSortedColumn,\n    sortedCountriesData,\n    setSortedCountriesData,\n}) => {\n    const [sortMode, setSortMode] = useState('desc');\n\n    // If other column is sorted set sortMode to default desc value\n    useEffect(() => {\n        if (sortedColumn !== columnName) {\n            setSortMode('desc');\n        }\n    }, [sortedColumn, columnName]);\n\n    const handleClick = () => {\n        if (columnName === sortedColumn) {\n            sortMode === 'desc' ? setSortMode('asc') : setSortMode('desc');\n            setSortedCountriesData(\n                sortData(\n                    columnName,\n                    sortedCountriesData,\n                    sortMode === 'asc' ? 'desc' : 'asc',\n                ),\n            );\n        } else if (columnName !== sortedColumn) {\n            setSortedColumn(columnName);\n            setSortedCountriesData(\n                sortData(\n                    columnName,\n                    sortedCountriesData,\n                    sortMode === 'asc' ? 'asc' : 'desc',\n                ),\n            );\n        }\n    };\n\n    return (\n        <li\n            className={`sort-option ${\n                sortedColumn === columnName ? 'active' : ''\n            } ${sortMode === 'asc' ? 'asc' : 'desc'}`}\n            onClick={() => handleClick()}\n        >\n            {optionName}\n        </li>\n    );\n};\n\nexport default SortOption;\n","import './SortBy.scss';\nimport SortOption from './SortOption';\nimport { useEffect, useState } from 'react';\n\nconst SortBy = ({\n    countriesData,\n    sortedCountriesData,\n    setSortedCountriesData,\n}) => {\n    const [sortedColumn, setSortedColumn] = useState('confirmed_daily');\n\n    useEffect(() => {\n        setSortedColumn('confirmed_daily');\n    }, [countriesData]);\n\n    return (\n        <th className=\"sort-by\">\n            <ul className=\"sort-by__list\">\n                <li className=\"sort-by__text\">Sort by:</li>\n                <SortOption\n                    optionName=\"New cases\"\n                    sortedColumn={sortedColumn}\n                    setSortedColumn={setSortedColumn}\n                    columnName=\"confirmed_daily\"\n                    sortedCountriesData={sortedCountriesData}\n                    setSortedCountriesData={setSortedCountriesData}\n                />\n                <SortOption\n                    optionName=\"Total Cases\"\n                    sortedColumn={sortedColumn}\n                    setSortedColumn={setSortedColumn}\n                    columnName=\"confirmed\"\n                    sortedCountriesData={sortedCountriesData}\n                    setSortedCountriesData={setSortedCountriesData}\n                />\n                <SortOption\n                    optionName=\"New deaths\"\n                    sortedColumn={sortedColumn}\n                    setSortedColumn={setSortedColumn}\n                    columnName=\"deaths_daily\"\n                    sortedCountriesData={sortedCountriesData}\n                    setSortedCountriesData={setSortedCountriesData}\n                />\n                <SortOption\n                    optionName=\"Total Deaths\"\n                    sortedColumn={sortedColumn}\n                    setSortedColumn={setSortedColumn}\n                    columnName=\"deaths\"\n                    sortedCountriesData={sortedCountriesData}\n                    setSortedCountriesData={setSortedCountriesData}\n                />\n            </ul>\n        </th>\n    );\n};\n\nexport default SortBy;\n","import TableRow from './TableRow';\nimport SortBy from './SortBy';\nimport './CountriesTable.scss';\nimport { useEffect, useState } from 'react';\nimport sortData from '../../scripts/sortData';\n\nconst CountriesTable = ({ countriesData, isLoading }) => {\n    const [sortedCountriesData, setSortedCountriesData] = useState(() =>\n        sortData('confirmed_daily', countriesData, 'desc'),\n    );\n\n    useEffect(() => {\n        setSortedCountriesData(\n            sortData('confirmed_daily', countriesData, 'desc'),\n        );\n    }, [countriesData]);\n\n    return (\n        <table className={`countries-table ${isLoading ? 'isLoading' : ''}`}>\n            <thead className=\"countries-table__thead\">\n                <tr className=\"countries-table__tr\">\n                    <th className=\"countries-table__title\">\n                        Cases and deaths by country\n                    </th>\n                    <SortBy\n                        countriesData={countriesData}\n                        sortedCountriesData={sortedCountriesData}\n                        setSortedCountriesData={setSortedCountriesData}\n                    />\n                </tr>\n            </thead>\n            <tbody className=\"countries-table__tbody\">\n                {sortedCountriesData &&\n                    sortedCountriesData.map((countryData) => {\n                        if (\n                            countryData.confirmed &&\n                            countryData.deaths &&\n                            countryData.country_iso2s.length\n                        ) {\n                            return (\n                                <TableRow\n                                    countryData={countryData}\n                                    key={countryData.country}\n                                />\n                            );\n                        } else return null;\n                    })}\n            </tbody>\n        </table>\n    );\n};\n\nexport default CountriesTable;\n","import './Modal.scss';\nimport { createPortal } from 'react-dom';\nimport { cloneElement } from 'react';\n\nconst Modal = ({ modalContent, setIsActive }) => {\n    return createPortal(\n        <div className=\"modal\">\n            {modalContent && cloneElement(modalContent, { setIsActive })}\n        </div>,\n        document.getElementById('modal-root'),\n    );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport Modal from 'components/Other/Modal';\nimport './HeaderOption.scss';\n\nconst HeaderOption = ({ iconId, bodyContent, modalContent }) => {\n    const [isActive, setIsActive] = useState(false);\n\n    return (\n        <div className=\"header-option\" onMouseDown={() => setIsActive(true)}>\n            <i className={`header-option__icon ${iconId}`} />\n            <div className=\"header-option__body\">{bodyContent}</div>\n            {isActive && modalContent && (\n                <Modal setIsActive={setIsActive} modalContent={modalContent} />\n            )}\n        </div>\n    );\n};\n\nexport default HeaderOption;\n","import moment from 'moment';\n\nconst getDate = (daysToAdd = 0, format = 'YYYY-MM-DD') => {\n    const date = moment().add(daysToAdd, 'days').format(format);\n\n    return date;\n};\n\nexport default getDate;\n","import { createSlice } from '@reduxjs/toolkit';\nimport getDate from '../scripts/getDate';\n\nexport const dateSlice = createSlice({\n    name: 'date',\n    initialState: {\n        date: '2022-01-20',\n    },\n    reducers: {\n        changeDate: (state, action) => {\n            state.date = action.payload;\n        },\n    },\n});\n\nexport const { changeDate } = dateSlice.actions;\n\nexport default dateSlice.reducer;\n","import './DateChange.scss';\nimport moment from 'moment';\nimport { useEffect, useRef, useState } from 'react';\nimport getDate from 'scripts/getDate';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeDate } from 'redux/dateSlice';\n\nconst DateChange = ({ setIsActive }) => {\n    const date = useSelector((state) => state.date.date);\n    const dispatch = useDispatch();\n\n    const [year, setYear] = useState(moment(date).format('YYYY'));\n    const [month, setMonth] = useState(moment(date).format('MM'));\n    const [day, setDay] = useState(moment(date).format('DD'));\n\n    const yearRef = useRef();\n\n    useEffect(() => {\n        yearRef.current.focus();\n    }, []);\n\n    // Handlers\n\n    const handleEnterClick = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            handleDateSave();\n        }\n    };\n\n    const handleEscapeClick = (e) => {\n        if (e.key === 'Escape') {\n            e.preventDefault();\n            setIsActive(false);\n        }\n    };\n\n    const handleYearInput = (year) => {\n        if (Number(year) <= Number(moment().format('YYYY')) || year === '') {\n            setYear(year);\n        }\n    };\n\n    const handleMonthInput = (month) => {\n        if ((month >= 1 && month <= 12) || month === '') {\n            setMonth(month);\n        }\n    };\n\n    const handleDayInput = (day) => {\n        if ((day >= 1 && day <= 31) || day === '') {\n            setDay(day);\n        }\n    };\n\n    const handleDateSave = () => {\n        if (year && month && day) {\n            const newDate = moment(`${year}-${month}-${day}`, 'YYYY-MM-DD');\n\n            // setDate(newDate.format('YYYY-MM-DD'));\n            dispatch(changeDate(newDate.format('YYYY-MM-DD')));\n            setIsActive(false);\n        }\n    };\n\n    const handleLatestDate = () => {\n        const latestDate = getDate(-1);\n\n        setYear(moment(latestDate).format('YYYY'));\n        setMonth(moment(latestDate).format('MM'));\n        setDay(moment(latestDate).format('DD'));\n    };\n\n    return (\n        <div\n            className=\"date-change\"\n            onKeyDown={(e) => {\n                handleEnterClick(e);\n                handleEscapeClick(e);\n            }}\n        >\n            <div className=\"date-change__header\">\n                <h3 className=\"date-change__title\">Insert date</h3>\n                <i\n                    className=\"fas fa-times date-change__close\"\n                    onClick={() => setIsActive(false)}\n                />\n            </div>\n            <div className=\"date-change__inputs-group\">\n                <input\n                    ref={yearRef}\n                    type=\"number\"\n                    placeholder=\"YYYY\"\n                    className=\"date-change__input\"\n                    value={year}\n                    onChange={(e) => handleYearInput(e.target.value)}\n                />\n                <input\n                    type=\"number\"\n                    placeholder=\"MM\"\n                    className=\"date-change__input\"\n                    value={month}\n                    onChange={(e) => handleMonthInput(e.target.value)}\n                />\n                <input\n                    type=\"number\"\n                    placeholder=\"DD\"\n                    className=\"date-change__input\"\n                    value={day}\n                    onChange={(e) => handleDayInput(e.target.value)}\n                />\n            </div>\n\n            <div className=\"date-change__buttons-group\">\n                <button\n                    className=\"date-change__button\"\n                    onClick={() => handleDateSave()}\n                >\n                    Save\n                </button>\n                <button\n                    className=\"date-change__button\"\n                    onClick={() => handleLatestDate()}\n                >\n                    Latest date\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default DateChange;\n","import { useEffect, useRef } from 'react';\nimport './SearchBox.scss';\n\nconst SearchBox = ({ searchedValue, setSearchedValue }) => {\n    const searchBoxRef = useRef();\n\n    useEffect(() => {\n        searchBoxRef.current.focus();\n    }, []);\n\n    return (\n        <div className=\"search-box\">\n            <input\n                ref={searchBoxRef}\n                type=\"text\"\n                value={searchedValue}\n                onChange={(e) => setSearchedValue(e.target.value)}\n                placeholder=\"Search\"\n                className=\"search-box__input\"\n            />\n            <i className=\"fas fa-search search-box__icon \"></i>\n        </div>\n    );\n};\n\nexport default SearchBox;\n","import './CountryChange.scss';\nimport SearchBox from 'components/Other/SearchBox';\nimport { useEffect, useMemo, useState } from 'react';\n\nconst CountryChange = ({ setIsActive, countriesData, setSelectedCountry }) => {\n    // Converts countriesData to array of objects with countryName and iso2\n    const countriesList = useMemo(() => {\n        const array = [\n            {\n                countryName: 'Global',\n                iso2: null,\n            },\n        ];\n\n        countriesData.forEach((country) => {\n            if (country.country && country.country_iso2s) {\n                array.push({\n                    countryName: country.country,\n                    iso2: country.country_iso2s[0],\n                });\n            }\n        });\n\n        return array;\n    }, [countriesData]);\n\n    const [searchedCountriesList, setSearchedCountriesList] =\n        useState(countriesList);\n    const [searchedValue, setSearchedValue] = useState('');\n\n    const searchCountry = (searchedValue, countriesList) => {\n        const searchedList = countriesList.filter((country) => {\n            if (\n                country.countryName\n                    .toLowerCase()\n                    .includes(searchedValue.toLowerCase())\n            ) {\n                return country;\n            }\n            return null;\n        });\n\n        setSearchedCountriesList(searchedList);\n    };\n\n    useEffect(() => {\n        searchCountry(searchedValue, countriesList);\n    }, [searchedValue, countriesList]);\n\n    const handleEnterClick = (e) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            document.activeElement.click();\n        }\n    };\n\n    const handleEscapeClick = (e) => {\n        if (e.key === 'Escape') {\n            e.preventDefault();\n            setIsActive(false);\n        }\n    };\n\n    const handleCountryClick = (country) => {\n        setSelectedCountry(country);\n        setIsActive(false);\n    };\n\n    return (\n        <div\n            className=\"country-change\"\n            onKeyDown={(e) => {\n                handleEnterClick(e);\n                handleEscapeClick(e);\n            }}\n        >\n            <div className=\"country-change__header\">\n                <h3 className=\"country-change__title\">Select country</h3>\n                <i\n                    className=\"fas fa-times country-change__close\"\n                    onClick={() => setIsActive(false)}\n                />\n            </div>\n            <SearchBox\n                searchedValue={searchedValue}\n                setSearchedValue={setSearchedValue}\n            />\n            <ul className=\"country-change__countries-list\">\n                {searchedCountriesList.map(({ countryName, iso2 }) => {\n                    if (iso2 || countryName === 'Global') {\n                        return (\n                            <li\n                                className=\"country-change__countries-list-item\"\n                                onClick={() =>\n                                    handleCountryClick({ countryName, iso2 })\n                                }\n                                tabIndex={0}\n                                key={countryName}\n                            >\n                                {iso2 && (\n                                    <img\n                                        className=\"country-change__country-flag\"\n                                        src={`https://flagcdn.com/24x18/${iso2.toLowerCase()}.png`}\n                                        alt={countryName + ' flag'}\n                                    ></img>\n                                )}\n                                {countryName === 'Global' && (\n                                    <i className=\"fas fa-globe country-change__country-flag\"></i>\n                                )}\n                                <span className=\"country-name\">\n                                    {countryName}\n                                </span>\n                            </li>\n                        );\n                    }\n                    return null;\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default CountryChange;\n","import './Header.scss';\nimport HeaderOption from './HeaderOption';\nimport DateChange from './DateChange';\nimport CountryChange from './CountryChange';\nimport { useSelector } from 'react-redux';\n\nconst Header = ({ selectedCountry, setSelectedCountry, countriesData }) => {\n    const date = useSelector((state) => state.date.date);\n\n    return (\n        <header className=\"header\">\n            <a className=\"header__logo\" href=\"/\">\n                <h1 className=\"header__text\">COVID-19 Data</h1>\n                <i className=\"header__icon fas fa-viruses\"></i>\n            </a>\n            <div className=\"header__options\">\n                <HeaderOption\n                    iconId=\"far fa-flag\"\n                    bodyContent={selectedCountry.countryName}\n                    modalContent={\n                        <CountryChange\n                            countriesData={countriesData}\n                            country={selectedCountry}\n                            setSelectedCountry={setSelectedCountry}\n                        />\n                    }\n                />\n                <HeaderOption\n                    iconId=\"far fa-calendar-alt\"\n                    bodyContent={date}\n                    modalContent={<DateChange />}\n                />\n            </div>\n        </header>\n    );\n};\n\nexport default Header;\n","import Chart from 'react-google-charts';\nimport './Map.scss';\n\nconst Map = ({ countriesData, selectedCountry, isLoading }) => {\n    const mapData = [['Country', 'Cases']];\n\n    countriesData.forEach(({ country_iso2s, confirmed_daily }) => {\n        if (confirmed_daily) {\n            if (country_iso2s.length > 0) {\n                country_iso2s.forEach((iso) => {\n                    const data = [iso, confirmed_daily];\n                    if (confirmed_daily < 0) data[1] = 0;\n                    mapData.push(data);\n                });\n            } else {\n                const data = [country_iso2s[0], confirmed_daily];\n                mapData.push(data);\n            }\n        }\n    });\n\n    return (\n        <div className={`map ${isLoading ? 'isLoading' : ''}`}>\n            <Chart\n                className={`map__geochart`}\n                chartType=\"GeoChart\"\n                data={mapData}\n                options={{\n                    region: selectedCountry.iso2,\n                    colorAxis: { colors: ['#ECFCFF', '#1EBFE3', '#00A6DE'] },\n                    legend: 'none',\n                }}\n            ></Chart>\n        </div>\n    );\n};\n\nexport default Map;\n","import { useEffect, useState } from 'react';\n\nconst useFetch = (url, options) => {\n    const [response, setResponse] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setIsLoading(true);\n        const fetchData = async () => {\n            try {\n                const res = await fetch(url, options);\n                const data = await res.json();\n\n                setResponse(data);\n                setIsLoading(false);\n            } catch (error) {\n                setError(error);\n                setIsLoading(false);\n            }\n        };\n        fetchData();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [url]);\n\n    return { response, isLoading, error };\n};\n\nexport default useFetch;\n","import { useEffect, useRef, useState } from 'react';\nimport './ChartSelect.scss';\n\nconst ChartSelect = ({ options, currentOption, setCurrentOption }) => {\n    const [isOptionActive, setIsOptionActive] = useState(false);\n    const dropdownRef = useRef();\n\n    // close dropdown when clicked outside\n    useEffect(() => {\n        const checkIfClickedOutside = (e) => {\n            if (\n                isOptionActive &&\n                dropdownRef.current &&\n                !dropdownRef.current.contains(e.target)\n            ) {\n                setIsOptionActive(false);\n            }\n        };\n\n        document.addEventListener('mousedown', checkIfClickedOutside);\n\n        return () => {\n            document.removeEventListener('mousedown', checkIfClickedOutside);\n        };\n    }, [isOptionActive]);\n\n    const handleOptionSelect = (value) => {\n        setCurrentOption(value);\n        setIsOptionActive(false);\n    };\n\n    return (\n        <div\n            className=\"chart-select\"\n            onClick={(e) => !isOptionActive && setIsOptionActive(true)}\n        >\n            {currentOption}\n            {isOptionActive && (\n                <ul className=\"chart-select__dropdown\" ref={dropdownRef}>\n                    {options &&\n                        options.map(({ value, name }) => {\n                            return (\n                                <li\n                                    className=\"chart-select__option\"\n                                    onClick={() => handleOptionSelect(value)}\n                                    key={value}\n                                >\n                                    {name}\n                                </li>\n                            );\n                        })}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default ChartSelect;\n","import './ChartButton.scss';\n\nconst ChartButton = ({ type, optionName, chartMode, setChartMode }) => {\n    return (\n        <button\n            className={`chart-button chart-button${type ? '--' + type : ''} ${\n                chartMode === type ? 'active' : ''\n            }`}\n            onClick={() => setChartMode(type)}\n        >\n            {optionName}\n        </button>\n    );\n};\n\nexport default ChartButton;\n","import './ChartOptions.scss';\nimport ChartSelect from './ChartSelect';\nimport ChartButton from './ChartButton';\n\nconst ChartOptions = ({\n    chartRange,\n    setChartRange,\n    chartMode,\n    setChartMode,\n}) => {\n    const chartRangeOptions = [\n        { value: 7, name: '7 days' },\n        { value: 14, name: '14 days' },\n        { value: 30, name: '30 days' },\n    ];\n\n    return (\n        <div className=\"chart-options\">\n            <ChartSelect\n                options={chartRangeOptions}\n                currentOption={`${chartRange} days`}\n                setCurrentOption={setChartRange}\n            />\n            <ChartButton\n                type=\"cases\"\n                optionName=\"New Cases\"\n                chartMode={chartMode}\n                setChartMode={setChartMode}\n            />\n            <ChartButton\n                type=\"deaths\"\n                optionName=\"New Deaths\"\n                chartMode={chartMode}\n                setChartMode={setChartMode}\n            />\n        </div>\n    );\n};\n\nexport default ChartOptions;\n","import { useState } from 'react';\n\nconst useLocalStorage = (key, value) => {\n    const [storedValue, setStoredValue] = useState(() => {\n        try {\n            const item = window.localStorage.getItem(key);\n\n            if (item) return JSON.parse(item);\n            return value;\n        } catch (error) {\n            console.log(error);\n        }\n    });\n\n    const setValue = (value) => {\n        try {\n            setStoredValue(value);\n            window.localStorage.setItem(key, JSON.stringify(value));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n","import './Chart.scss';\nimport { Line } from 'react-chartjs-2';\nimport useFetch from 'hooks/useFetch';\nimport { useEffect, useState } from 'react';\nimport ChartOptions from './ChartOptions';\nimport moment from 'moment';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { useSelector } from 'react-redux';\n\nconst Chart = ({ selectedCountry, isLoading }) => {\n    const date = useSelector((state) => state.date.date);\n\n    const [chartData, setChartData] = useState(null);\n    const [chartRange, setChartRange] = useLocalStorage('chartRange', 30);\n    const [chartMode, setChartMode] = useState('cases');\n\n    const [chartColor, setChartColor] = useState('33, 212, 253');\n    const [dataName, setDataName] = useState('confirmed_daily');\n    const [label, setLabel] = useState('New Cases');\n\n    const chartMinDate = moment(date)\n        .subtract(chartRange, 'days')\n        .format('YYYY-MM-DD');\n    const url = `https://webhooks.mongodb-stitch.com/api/client/v2.0/app/covid-19-qppza/service/REST-API/incoming_webhook/countries_summary?${\n        selectedCountry && selectedCountry.countryName !== 'Global'\n            ? `country=${selectedCountry.countryName}&`\n            : ''\n    }min_date=${chartMinDate}&max_date=${date}&hide_fields=_id,uids,country,states,country_iso2s,population,recovered,confirmed,deaths,country_iso3s,country_codes,combined_names,recovered_daily`;\n    const { response: covidData, error } = useFetch(url, {});\n\n    useEffect(() => {\n        const casesOptions = {\n            chartColor: '30, 191, 227',\n            dataName: 'confirmed_daily',\n            label: 'New Cases',\n        };\n\n        const deathsOptions = {\n            chartColor: '51, 51, 51',\n            dataName: 'deaths_daily',\n            label: 'New Deaths',\n        };\n\n        if (chartMode === 'cases') {\n            setChartColor(casesOptions.chartColor);\n            setDataName(casesOptions.dataName);\n            setLabel(casesOptions.label);\n        } else if (chartMode === 'deaths') {\n            setChartColor(deathsOptions.chartColor);\n            setDataName(deathsOptions.dataName);\n            setLabel(deathsOptions.label);\n        }\n    }, [chartMode]);\n\n    useEffect(() => {\n        // Converts data from API to display it in the chart\n        const convertToChartData = (data) => {\n            const convertedData = [];\n\n            data.forEach((element) => {\n                let isDateInArray = false;\n\n                convertedData.forEach((convertedElement) => {\n                    if (\n                        convertedElement &&\n                        convertedElement.date === element.date\n                    ) {\n                        convertedElement.confirmed_daily +=\n                            element.confirmed_daily;\n                        convertedElement.deaths_daily += element.deaths_daily;\n\n                        isDateInArray = true;\n                    }\n                });\n                if (!isDateInArray) {\n                    convertedData.push(element);\n                }\n            });\n\n            return convertedData;\n        };\n\n        if (covidData) {\n            setChartData(convertToChartData(covidData));\n        }\n    }, [covidData]);\n\n    const data = {\n        labels:\n            chartData &&\n            chartData.map(({ date }) => moment(date).format('MMM DD')),\n        datasets: [\n            {\n                label: label,\n                data:\n                    chartData && chartData.map((element) => element[dataName]),\n                borderColor: `rgba(${chartColor}, 1)`,\n                fill: true,\n                tension: 0.2,\n                backgroundColor: `rgba(${chartColor}, 0.2)`,\n            },\n        ],\n    };\n\n    const options = {\n        responsive: true,\n        maintainAspectRatio: false,\n        elements: {\n            point: {\n                radius: 0,\n                hoverRadius: 5,\n                hitRadius: 200,\n            },\n        },\n        plugins: {\n            legend: {\n                display: false,\n            },\n            tooltips: {\n                mode: 'index',\n                intersect: false,\n            },\n        },\n        scales: {\n            y: {\n                beginAtZero: true,\n            },\n            x: {\n                ticks: {\n                    maxTicksLimit:\n                        chartData && chartData.length / (chartData.length / 8),\n                },\n            },\n        },\n    };\n\n    return (\n        <div className={`chart`}>\n            <h2 className=\"chart__title\">\n                {selectedCountry.countryName} Trend\n            </h2>\n            <ChartOptions\n                chartRange={chartRange}\n                setChartRange={setChartRange}\n                chartMode={chartMode}\n                setChartMode={setChartMode}\n            />\n            <div className={`chart__body ${isLoading ? 'isLoading' : ''}`}>\n                <Line data={data} options={options} />\n            </div>\n        </div>\n    );\n};\n\nexport default Chart;\n","import { useState, useEffect } from 'react';\n\nconst useMousePosition = () => {\n    const [mousePosition, setMousePosition] = useState({ x: null, y: null });\n\n    useEffect(() => {\n        const updateMousePosition = (e) =>\n            setMousePosition({ x: e.clientX, y: e.clientY });\n\n        window.addEventListener('mousemove', updateMousePosition);\n\n        return () => {\n            window.removeEventListener('mousemove', updateMousePosition);\n        };\n    }, []);\n    return mousePosition;\n};\n\nexport default useMousePosition;\n","import { useEffect } from 'react';\nimport './Tooltip.scss';\nimport useMousePosition from 'hooks/useMousePosition';\n\nconst Tooltip = (props) => {\n    const mousePosition = useMousePosition();\n\n    const style = {\n        top: mousePosition.y - 35,\n        left: mousePosition.x - 20,\n    };\n\n    // useEffect(() => {\n    //     console.log(mousePosition);\n    // }, [mousePosition]);\n\n    return (\n        <div className=\"tooltip\" style={style}>\n            {props.content}\n        </div>\n    );\n};\n\nexport default Tooltip;\n","import './ProgressBar.scss';\nimport Tooltip from 'components/Other/Tooltip';\nimport { useState, useEffect } from 'react';\n\nconst ProgressBar = ({\n    valueMain,\n    maxValueMain,\n    valueSecondary,\n    maxValueSecondary,\n    mainColor,\n    secondaryColor,\n    isLoading,\n}) => {\n    const mainStyle = {\n        width: `${(valueMain / maxValueMain) * 100}%`,\n        background: mainColor,\n    };\n\n    const secondaryStyle = {\n        width: `${(valueSecondary / maxValueSecondary) * 100}%`,\n        background: secondaryColor,\n    };\n\n    const [isMainTooltipVisible, setIsMainTooltipVisible] = useState(false);\n    const [isSecondaryTooltipVisible, setIsSecondaryTooltipVisible] =\n        useState(false);\n\n    return (\n        <div className=\"progress-bar\">\n            <div\n                className=\"progress-bar__main\"\n                style={mainStyle}\n                onMouseEnter={() => isLoading || setIsMainTooltipVisible(true)}\n                onMouseLeave={() => isLoading || setIsMainTooltipVisible(false)}\n            ></div>\n            {isMainTooltipVisible && (\n                <Tooltip\n                    content={`${((valueMain / maxValueMain) * 100).toFixed(\n                        2,\n                    )} %`}\n                />\n            )}\n            <div\n                className=\"progress-bar__secondary\"\n                style={secondaryStyle}\n                onMouseEnter={() =>\n                    isLoading || setIsSecondaryTooltipVisible(true)\n                }\n                onMouseLeave={() =>\n                    isLoading || setIsSecondaryTooltipVisible(false)\n                }\n            ></div>\n            {isSecondaryTooltipVisible && (\n                <Tooltip\n                    content={`${(\n                        (valueSecondary / maxValueSecondary) *\n                        100\n                    ).toFixed(2)} %`}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ProgressBar;\n","import './ProgressInfoItem.scss';\n\nconst ProgressInfoItem = ({ value, valueName, color }) => {\n    return (\n        <li className=\"progress-info-item\">\n            <div className=\"progress-info-item__left\">\n                <i\n                    className=\"progress-info-color fas fa-circle\"\n                    style={{ color: color }}\n                ></i>\n            </div>\n            <div className=\"progress-info-item__right\">\n                <span className=\"progress-info-item__text\">{valueName}</span>\n                <span className=\"progress-info-item__value\">\n                    {value && value.toLocaleString()}\n                    {!value && 'Not available'}\n                </span>\n            </div>\n        </li>\n    );\n};\n\nexport default ProgressInfoItem;\n","import './Progress.scss';\nimport ProgressBar from './ProgressBar';\nimport ProgressInfoItem from './ProgressInfoItem';\n\nconst Progress = ({\n    title,\n    fullyVac,\n    partiallyVac,\n    population,\n    isActive = false,\n    isLoading,\n}) => {\n    return (\n        <div className={`progress ${isLoading ? 'isLoading' : ''}`}>\n            <div className=\"progress__header\">\n                <h3 className=\"progress__text\">{title}</h3>\n            </div>\n\n            {isActive && (\n                <ProgressBar\n                    valueMain={fullyVac}\n                    maxValueMain={population}\n                    valueSecondary={partiallyVac}\n                    maxValueSecondary={population}\n                    mainColor=\"#1ebfe3\"\n                    secondaryColor=\"#A5D7E2\"\n                    isLoading={isLoading}\n                />\n            )}\n\n            {!isActive && <ProgressBar />}\n\n            <ul className=\"progress__info-list\">\n                <ProgressInfoItem\n                    value={fullyVac}\n                    valueName={'Fully vaccinated'}\n                    color={'#1ebfe3'}\n                />\n                <ProgressInfoItem\n                    value={partiallyVac}\n                    valueName={'Partially vaccinated'}\n                    color={'#A5D7E2'}\n                />\n                <ProgressInfoItem\n                    value={population}\n                    valueName={'Population'}\n                    color={'#ededed'}\n                />\n            </ul>\n        </div>\n    );\n};\n\nexport default Progress;\n","import './Vaccination.scss';\nimport Progress from './Progress';\nimport useFetch from 'hooks/useFetch';\nimport getDate from 'scripts/getDate';\n\nconst Vaccination = ({ selectedCountry }) => {\n    const { response: vaccinationGlobalData, errorGlobal } = useFetch(\n        'https://covid-api.mmediagroup.fr/v1/vaccines?country=Global',\n        {\n            headers: { 'Content-Type': 'application/json' },\n        },\n    );\n\n    const {\n        response: vaccinationCountryData,\n        isLoading,\n        errorCountry,\n    } = useFetch(\n        `https://covid-api.mmediagroup.fr/v1/vaccines?country=${selectedCountry.countryName}`,\n        {\n            headers: { 'Content-Type': 'application/json' },\n        },\n    );\n\n    return (\n        <div className=\"vaccination\">\n            <h2 className=\"vaccination__title\">COVID-19 Vaccines</h2>\n            <div className=\"vaccination__date\">Last updated: {getDate()}</div>\n            {vaccinationCountryData &&\n                selectedCountry.countryName !== 'Global' && (\n                    <Progress\n                        title={`${selectedCountry.countryName} progress`}\n                        fullyVac={vaccinationCountryData.All.people_vaccinated}\n                        partiallyVac={\n                            vaccinationCountryData.All\n                                .people_partially_vaccinated\n                        }\n                        population={vaccinationCountryData.All.population}\n                        isActive={true}\n                        isLoading={isLoading}\n                    />\n                )}\n\n            {vaccinationCountryData &&\n                selectedCountry.countryName === 'Global' && (\n                    <Progress\n                        title={'No country selected'}\n                        fullyVac=\"-\"\n                        partiallyVac=\"-\"\n                        population=\"-\"\n                    />\n                )}\n\n            {vaccinationGlobalData && (\n                <Progress\n                    title=\"Global progress\"\n                    fullyVac={vaccinationGlobalData.All.people_vaccinated}\n                    partiallyVac={\n                        vaccinationGlobalData.All.people_partially_vaccinated\n                    }\n                    population={vaccinationGlobalData.All.population}\n                    isActive={true}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Vaccination;\n","import './Footer.scss';\n\nconst Footer = () => {\n    const openNewPage = (url) => {\n        window.open(url, '_blank');\n    };\n\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">\n                {' '}\n                &copy; 2021 &middot; Made by <b>Mateusz Penkala</b> &middot;\n            </p>\n            <ul className=\"footer__socials-list\">\n                <li\n                    className=\"footer__socials-item\"\n                    onClick={() => openNewPage('https://github.com/SpritS1')}\n                >\n                    <i className=\"footer__social-icon fab fa-github-square\"></i>\n                </li>\n                <li\n                    className=\"footer__socials-item\"\n                    onClick={() =>\n                        openNewPage(\n                            'https://www.linkedin.com/in/mateusz-penkala-060540209/',\n                        )\n                    }\n                >\n                    <i className=\"footer__social-icon fab fa-linkedin\"></i>\n                </li>\n            </ul>\n        </footer>\n    );\n};\n\nexport default Footer;\n","import './LoadingScreen.scss';\n\nconst LoadingScreen = () => {\n    return (\n        <div className=\"loading-screen\">\n            <div className=\"loading-screen__spin\"></div>\n        </div>\n    );\n};\n\nexport default LoadingScreen;\n","import './Home.scss';\nimport BasicDataDisplay from 'components/BasicDataDisplay/BasicDataDisplay';\nimport CountriesTable from 'components/CountriesTable/CountriesTable';\nimport Header from 'components/Header/Header';\nimport Map from 'components/Map/Map';\nimport Chart from 'components/Chart/Chart';\nimport Vaccination from 'components/Vaccination/Vaccination';\nimport Footer from 'components/Footer/Footer';\nimport LoadingScreen from 'components/Other/LoadingScreen';\n\nimport useFetch from 'hooks/useFetch';\n\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport { useSelector } from 'react-redux';\n\nconst Home = () => {\n    const date = useSelector((state) => state.date.date);\n\n    // States\n    const [selectedCountry, setSelectedCountry] = useLocalStorage(\n        'selectedCountry',\n        {\n            countryName: 'Global',\n            iso2: null,\n        },\n    );\n\n    // Fetch\n    const url = `https://webhooks.mongodb-stitch.com/api/client/v2.0/app/covid-19-qppza/service/REST-API/incoming_webhook/countries_summary?&min_date=${date}&max_date=${date}`;\n    const fetchOptions = {\n        headers: { 'Content-Type': 'application/json' },\n    };\n    const {\n        response: countriesData,\n        isLoading,\n        error,\n    } = useFetch(url, fetchOptions);\n\n    return (\n        <div className=\"home\">\n            {!countriesData && <LoadingScreen />}\n\n            {countriesData && (\n                <>\n                    <Header\n                        selectedCountry={selectedCountry}\n                        setSelectedCountry={setSelectedCountry}\n                        countriesData={countriesData}\n                    />\n                    <BasicDataDisplay\n                        countriesData={countriesData}\n                        selectedCountry={selectedCountry}\n                        isLoading={isLoading}\n                    />\n                    <CountriesTable\n                        countriesData={countriesData}\n                        isLoading={isLoading}\n                    />\n                    <Map\n                        countriesData={countriesData}\n                        selectedCountry={selectedCountry}\n                        isLoading={isLoading}\n                    />\n                    <Chart\n                        selectedCountry={selectedCountry}\n                        isLoading={isLoading}\n                    />\n                    <Vaccination\n                        selectedCountry={selectedCountry}\n                        isLoading={isLoading}\n                    />\n                    <Footer />\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Home;\n","import { configureStore } from '@reduxjs/toolkit';\nimport dateReducer from './dateSlice';\n\nexport default configureStore({\n    reducer: {\n        date: dateReducer,\n    },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from 'components/Pages/Home.jsx';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Home />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}